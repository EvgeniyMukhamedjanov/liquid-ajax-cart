var t={d:(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)},e={};t.d(e,{Z:()=>Ct});const n="liquid-ajax-cart",r="data-ajax-cart",o="ajax-cart",i="js-ajax-cart",s="add",a="change",u="update",c="clear",l="get",d=`${n}:queues`,f=`${n}:request`,h=[];function p(t){var e;(null===(e=t.options)||void 0===e?void 0:e.newQueue)||0===h.length?1===h.push([t])&&(y(!0),m()):h[0].push(t)}function m(){if(0===h.length)return void y(!1);if(0===h[0].length)return h.shift(),void m();const{requestType:t,body:e,options:n}=h[0][0];!function(t,e,n,r=undefined){const o=A(t);let i;t!==l&&(i=e||{});const a=t===l?"GET":"POST",u=n.info||{},c="firstComplete"in n?[n.firstComplete]:[],d={requestType:t,endpoint:o,requestBody:i,info:u},h=[],p=new CustomEvent(f,{detail:{requestState:{requestType:t,endpoint:o,info:u,requestBody:i},onResult:t=>{c.push(t)}}});if(document.dispatchEvent(p),"lastComplete"in n&&c.push(n.lastComplete),u.cancel)return void v(c,r,d);if(void 0!==i){let t;if(i instanceof FormData||i instanceof URLSearchParams?i.has("sections")&&(t=i.get("sections").toString()):t=i.sections,"string"==typeof t||t instanceof String||Array.isArray(t)){const e=[];if(Array.isArray(t)?e.push(...t):e.push(...t.split(",")),e.length>5){h.push(...e.slice(5));const t=e.slice(0,5).join(",");i instanceof FormData||i instanceof URLSearchParams?i.set("sections",t):i.sections=t}}else null!=t&&console.error(`Liquid Ajax Cart: "sections" parameter in a Cart Ajax API request must be a string or an array. Now it is ${t}`)}const m={method:a};t!==l&&(i instanceof FormData||i instanceof URLSearchParams?(m.body=i,m.headers={"x-requested-with":"XMLHttpRequest"}):(m.body=JSON.stringify(i),m.headers={"Content-Type":"application/json"})),fetch(o,m).then((t=>t.json().then((e=>({ok:t.ok,status:t.status,body:e}))))).then((e=>(d.responseData=e,s!==t&&0===h.length||!d.responseData.ok?d:b(h).then((t=>(d.extraResponseData=t,d)))))).catch((t=>{console.error("Liquid Ajax Cart: Error while performing cart Ajax request"),console.error(t),d.fetchError=t})).finally((()=>{v(c,r,d)}))}(t,e,n,(()=>{h[0].shift(),m()}))}function y(t){const e=new CustomEvent(d,{detail:{inProgress:t}});document.dispatchEvent(e)}function v(t,e,n){if(t.forEach((t=>{try{t(n)}catch(t){console.error("Liquid Ajax Cart: Error during Ajax request result callback in ajax-api"),console.error(t)}})),e)try{e()}catch(t){console.error("Liquid Ajax Cart: Error during Ajax request final internal callback in ajax-api"),console.error(t)}}function b(t=[]){const e={};return t.length>0&&(e.sections=t.slice(0,5).join(",")),fetch(A(u),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then((e=>e.json().then((n=>{const r={ok:e.ok,status:e.status,body:n};return t.length<6?r:b(t.slice(5)).then((t=>{var e;return t.ok&&(null===(e=t.body)||void 0===e?void 0:e.sections)&&"object"==typeof t.body.sections&&("sections"in r.body||(r.body.sections={}),r.body.sections=Object.assign(Object.assign({},r.body.sections),t.body.sections)),r}))}))))}function g(t={}){p({requestType:l,body:void 0,options:t})}function q(t={},e={}){p({requestType:s,body:t,options:e})}function w(t={},e={}){p({requestType:a,body:t,options:e})}function $(t={},e={}){p({requestType:u,body:t,options:e})}function S(t={},e={}){p({requestType:c,body:t,options:e})}function A(t){var e,n,r,o,i,d,f,h,p,m;switch(t){case s:return`${(null===(n=null===(e=window.Shopify)||void 0===e?void 0:e.routes)||void 0===n?void 0:n.root)||"/"}cart/add.js`;case a:return`${(null===(o=null===(r=window.Shopify)||void 0===r?void 0:r.routes)||void 0===o?void 0:o.root)||"/"}cart/change.js`;case l:return`${(null===(d=null===(i=window.Shopify)||void 0===i?void 0:i.routes)||void 0===d?void 0:d.root)||"/"}cart.js`;case c:return`${(null===(h=null===(f=window.Shopify)||void 0===f?void 0:f.routes)||void 0===h?void 0:h.root)||"/"}cart/clear.js`;case u:return`${(null===(m=null===(p=window.Shopify)||void 0===p?void 0:p.routes)||void 0===m?void 0:m.root)||"/"}cart/update.js`;default:return}}const j=`${n}:state`,E=`${r}-initial-state`;let L,x=null,C={requestInProgress:!1,cartStateSet:!1};function T(t){const{attributes:e,items:n,item_count:r}=t;if(null==e||"object"!=typeof e)return null;if("number"!=typeof r&&!(r instanceof Number))return null;if(!Array.isArray(n))return null;const o=[];for(let t=0;t<n.length;t++){const e=n[t];if("number"!=typeof e.id&&!(e.id instanceof Number))return null;if("string"!=typeof e.key&&!(e.key instanceof String))return null;if("number"!=typeof e.quantity&&!(e.quantity instanceof Number))return null;if(!("properties"in e))return null;o.push(Object.assign(Object.assign({},e),{id:e.id,key:e.key,quantity:e.quantity,properties:e.properties}))}return Object.assign(Object.assign({},t),{attributes:e,items:o,item_count:r})}function k(){return{cart:x,status:C,previousCart:L}}const D=t=>{const e=new CustomEvent(j,{detail:{state:k(),isCartUpdated:t}});document.dispatchEvent(e)},N=`${r}-bind-state`;function P(t){t.status.cartStateSet&&document.querySelectorAll(`[${N}]`).forEach((t=>{const e=t.getAttribute(N);t.textContent=function(t){const{stateBinderFormatters:e}=R,[n,...r]=t.split("|");let o=O(n,k());return r.forEach((t=>{const n=t.trim();""!==n&&("object"==typeof e&&n in e?o=e[n](o):n in B?o=B[n](o):console.warn(`Liquid Ajax Cart: the "${n}" formatter is not found`))})),"string"==typeof o||o instanceof String||"number"==typeof o||o instanceof Number?o.toString():(console.error(`Liquid Ajax Cart: the calculated value for the ${N}="${t}" element must be string or number. But the value is`,o),"")}(e)}))}function O(t,e){const n=t.split("."),r=n.shift().trim();return""!==r&&r in e&&n.length>0?O(n.join("."),e[r]):e[r]}const B={money_with_currency:t=>{var e;const n=k();if("number"!=typeof t&&!(t instanceof Number))return console.error("Liquid Ajax Cart: the 'money_with_currency' formatter is not applied because the value is not a number. The value is ",t),t;const r=t/100;return"Intl"in window&&(null===(e=window.Shopify)||void 0===e?void 0:e.locale)?Intl.NumberFormat(window.Shopify.locale,{style:"currency",currency:n.cart.currency}).format(r):`${r.toFixed(2)} ${n.cart.currency}`}},R={stateBinderFormatters:{},requestErrorText:"There was an error while updating your cart. Please try again.",updateOnWindowFocus:!0};function I(t,e){t in R&&"computed"!==t?(R[t]=e,"stateBinderFormatters"===t&&P(k())):console.error(`Liquid Ajax Cart: unknown configuration parameter "${t}"`)}const F=`${n}:sections`,M=`${r}-section`,H=`${r}-static-element`,U=`${r}-section-scroll`,_="shopify-section-",Q=`${o}-product-form`,J="in-progress";class W extends HTMLElement{constructor(){var t,e;super();const n=this,r=this.querySelectorAll("form");if(1!==r.length)return void console.error(`Liquid Ajax Cart: "${Q}" element must have one "form" element as a child, ${r.length} found`,n);const o=r[0];new URL(o.action).pathname===`${(null===(e=null===(t=window.Shopify)||void 0===t?void 0:t.routes)||void 0===e?void 0:e.root)||"/"}cart/add`?o.addEventListener("submit",(t=>{if(!n.hasAttribute(J)){const t=new FormData(o);n.setAttribute(J,""),q(t,{lastComplete:()=>{n.removeAttribute(J)},newQueue:!0,info:{initiator:n}})}t.preventDefault()})):console.error(`Liquid Ajax Cart: "${Q}" element's form "action" attribute value isn't a product form action URL`,o,n)}}var V,Z,z,G,K,X,Y,tt;const et=`${(null===(Z=null===(V=window.Shopify)||void 0===V?void 0:V.routes)||void 0===Z?void 0:Z.root)||"/"}cart/change`,nt=`${(null===(G=null===(z=window.Shopify)||void 0===z?void 0:z.routes)||void 0===G?void 0:G.root)||"/"}cart/add`,rt=`${(null===(X=null===(K=window.Shopify)||void 0===K?void 0:K.routes)||void 0===X?void 0:X.root)||"/"}cart/clear`,ot=`${(null===(tt=null===(Y=window.Shopify)||void 0===Y?void 0:Y.routes)||void 0===tt?void 0:tt.root)||"/"}cart/update`,it=`${r}-request-button`;function st(t,e){let n;const r=[et,nt,rt,ot];if(!t.hasAttribute(it))return;const o=t.getAttribute(it);if(o){let t;try{if(t=new URL(o,window.location.origin),!r.includes(t.pathname))throw`URL should be one of the following: ${et}, ${nt}, ${ot}, ${rt}`;n=t}catch(t){console.error(`Liquid Ajax Cart: ${it} contains an invalid URL as a parameter.`,t)}}else if(t instanceof HTMLAnchorElement&&t.hasAttribute("href")){const e=new URL(t.href);r.includes(e.pathname)?n=e:t.hasAttribute(it)&&console.error(`Liquid Ajax Cart: a link with the ${it} contains an invalid href URL.`,`URL should be one of the following: ${et}, ${nt}, ${ot}, ${rt}`)}if(void 0===n)return void console.error(`Liquid Ajax Cart: a ${it} element doesn't have a valid URL`);if(e&&e.preventDefault(),k().status.requestInProgress)return;const i=new FormData;switch(n.searchParams.forEach(((t,e)=>{i.append(e,t)})),n.pathname){case nt:q(i,{newQueue:!0,info:{initiator:t}});break;case et:w(i,{newQueue:!0,info:{initiator:t}});break;case ot:$(i,{newQueue:!0,info:{initiator:t}});break;case rt:S({},{newQueue:!0,info:{initiator:t}})}}function at(t,e){let n,r;return e.status.cartStateSet&&(t.length>3?(n=e.cart.items.find((e=>e.key===t)),r="id"):(n=e.cart.items[Number(t)-1],r="line"),void 0===n&&(n=null,console.error(`Liquid Ajax Cart: line item with ${r}="${t}" not found`))),[n,r]}const ut=`${r}-quantity-input`;function ct(t){return!!t.hasAttribute(ut)&&(t instanceof HTMLInputElement&&("text"===t.type||"number"===t.type)||(console.error(`Liquid Ajax Cart: the ${ut} attribute supports "input" elements only with the "text" and the "number" types`),!1))}function lt(t){t.status.requestInProgress?document.querySelectorAll(`input[${ut}]`).forEach((t=>{ct(t)&&(t.disabled=!0)})):document.querySelectorAll(`input[${ut}]`).forEach((e=>{if(!ct(e))return;const n=e.getAttribute(ut).trim(),[r]=at(n,t);r?e.value=r.quantity.toString():null===r&&(e.value="0"),e.disabled=!1}))}function dt(t,e){if(!ct(t))return;if(e&&e.preventDefault(),k().status.requestInProgress)return;let n=Number(t.value.trim());const r=t.getAttribute(ut).trim();if(isNaN(n))return void console.error(`Liquid Ajax Cart: input value of a ${ut} must be an Integer number`);if(n<1&&(n=0),!r)return void console.error(`Liquid Ajax Cart: attribute value of a ${ut} must be an item key or an item index`);const o=r.length>3?"id":"line",i=new FormData;i.set(o,r),i.set("quantity",n.toString()),w(i,{newQueue:!0,info:{initiator:t}}),t.blur()}const ft=`${r}-property-input`;function ht(t){const e=t.getAttribute(ft),n=t.getAttribute("name");console.error(`Liquid Ajax Cart: the element [${ft}="${e}"]${n?`[name="${n}"]`:""} has wrong attributes.`)}function pt(t){return!!t.hasAttribute(ft)&&!!(t instanceof HTMLInputElement&&"hidden"!==t.type||t instanceof HTMLTextAreaElement||t instanceof HTMLSelectElement)}function mt(t){const e={objectCode:void 0,propertyName:void 0,attributeValue:void 0};if(!t.hasAttribute(ft))return e;let n=t.getAttribute(ft).trim();if(!n){const e=t.getAttribute("name").trim();e&&(n=e)}if(!n)return ht(t),e;if(e.attributeValue=n,"note"===n)return e.objectCode="note",e;let[r,...o]=n.trim().split("[");return!o||1!==o.length||o[0].length<2||o[0].indexOf("]")!==o[0].length-1?(ht(t),e):(e.objectCode=r,e.propertyName=o[0].replace("]",""),e)}function yt(t){t.status.requestInProgress?document.querySelectorAll(`[${ft}]`).forEach((t=>{pt(t)&&(t.disabled=!0)})):document.querySelectorAll(`[${ft}]`).forEach((e=>{if(!pt(e))return;const{objectCode:n,propertyName:r,attributeValue:o}=mt(e);if(!n)return;if(!t.status.cartStateSet)return;let i,s=!1;if("note"===n)i=t.cart.note;else if("attributes"===n)i=t.cart.attributes[r];else{const[e,a]=at(n,t);e&&(i=e.properties[r]),null===e&&(console.error(`Liquid Ajax Cart: line item with ${a}="${n}" was not found when the [${ft}] element with "${o}" value tried to get updated from the State`),s=!0)}e instanceof HTMLInputElement&&("checkbox"===e.type||"radio"===e.type)?e.checked=e.value===i:("string"==typeof i||i instanceof String||"number"==typeof i||i instanceof Number||(Array.isArray(i)||i instanceof Object?(i=JSON.stringify(i),console.warn(`Liquid Ajax Cart: the ${ft} with the "${o}" value is bound to the ${r} ${"attributes"===n?"attribute":"property"} that is not string or number: ${i}`)):i=""),e.value=i),s||(e.disabled=!1)}))}function vt(t,e){if(!pt(t))return;e&&e.preventDefault(),t.blur();const n=k();if(!n.status.cartStateSet)return;if(n.status.requestInProgress)return;const{objectCode:r,propertyName:o,attributeValue:i}=mt(t);if(!r)return;let s=t.value;if(t instanceof HTMLInputElement&&"checkbox"===t.type&&!t.checked){let t=document.querySelector(`input[type="hidden"][${ft}="${i}"]`);t||"note"!==r&&"attributes"!==r||(t=document.querySelector(`input[type="hidden"][${ft}][name="${i}"]`)),s=t?t.value:""}if("note"===r){const e=new FormData;e.set("note",s),$(e,{newQueue:!0,info:{initiator:t}})}else if("attributes"===r){const e=new FormData;e.set(`attributes[${o}]`,s),$(e,{newQueue:!0,info:{initiator:t}})}else{const[e,a]=at(r,n);if(null===e&&console.error(`Liquid Ajax Cart: line item with ${a}="${r}" was not found when the [${ft}] element with "${i}" value tried to update the cart`),!e)return;const u=Object.assign({},e.properties);u[o]=s;const c=new FormData;let l=c;c.set(a,r),c.set("quantity",e.quantity.toString());for(let t in u){const n=u[t];"string"==typeof n||n instanceof String?c.set(`properties[${t}]`,u[t]):l={[a]:r,quantity:e.quantity,properties:u}}w(l,{newQueue:!0,info:{initiator:t}})}}var bt=function(t,e,n,r,o){if("m"===r)throw new TypeError("Private method is not writable");if("a"===r&&!o)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof e?t!==e||!o:!e.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===r?o.call(t,n):o?o.value=n:e.set(t,n),n},gt=function(t,e,n,r){if("a"===n&&!r)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof e?t!==e||!r:!e.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===n?r:"a"===n?r.call(t):r?r.value:e.get(t)};const qt=`${o}-quantity`,wt=`${r}-quantity-plus`,$t=`${r}-quantity-minus`,St=`${r}-errors`,At=`${i}-set`,jt=`${i}-in-progress`,Et=`${i}-empty`,Lt=`${i}-not-empty`;function xt(t){const e=document.querySelector("html");e.classList.toggle(At,t.status.cartStateSet),e.classList.toggle(jt,t.status.requestInProgress),e.classList.toggle(Et,t.status.cartStateSet&&0===t.cart.item_count),e.classList.toggle(Lt,t.status.cartStateSet&&t.cart.item_count>0)}if(!("liquidAjaxCart"in window)){document.addEventListener(f,(t=>{const{requestState:e,onResult:n}=t.detail;if(void 0!==e.requestBody){const t=[];if(document.querySelectorAll(`[${M}]`).forEach((e=>{const n=e.closest(`[id^="${_}"]`);if(n){const e=n.id.replace(_,"");-1===t.indexOf(e)&&t.push(e)}else console.error(`Liquid Ajax Cart: there is a ${M} element that is not inside a Shopify section. All the ${M} elements must be inside Shopify sections.`)})),t.length){let n,r=t.join(",");e.requestBody instanceof FormData||e.requestBody instanceof URLSearchParams?e.requestBody.has("sections")&&(n=e.requestBody.get("sections").toString()):n=e.requestBody.sections,(("string"==typeof n||n instanceof String)&&""!==n||n&&Array.isArray(n)&&n.length>0)&&(r=`${n.toString()},${r}`),e.requestBody instanceof FormData||e.requestBody instanceof URLSearchParams?e.requestBody.set("sections",r):e.requestBody.sections=r}}n((t=>{var e,n,r;const o=new DOMParser,i=[];if((null===(e=t.responseData)||void 0===e?void 0:e.ok)&&"sections"in t.responseData.body){let e=t.responseData.body.sections;(null===(r=null===(n=t.extraResponseData)||void 0===n?void 0:n.body)||void 0===r?void 0:r.sections)&&(e=Object.assign(Object.assign({},e),t.extraResponseData.body.sections));for(let n in e)e[n]?document.querySelectorAll(`#shopify-section-${n}`).forEach((r=>{let a=[];const u="__noId__",c={};r.querySelectorAll(` [${U}] `).forEach((t=>{let e=t.getAttribute(U).toString().trim();""===e&&(e=u),e in c||(c[e]=[]),c[e].push({scroll:t.scrollTop,height:t.scrollHeight})}));const l={},d=r.querySelectorAll(`[${H}]`);d&&d.forEach((t=>{let e=t.getAttribute(H).toString().trim();""===e&&(e=u),e in l||(l[e]=[]),l[e].push(t)}));const f=r.querySelectorAll(`[${M}]`);if(f){const t=o.parseFromString(e[n],"text/html");for(let e in l)t.querySelectorAll(` [${H}="${e.replace(u,"")}"] `).forEach(((t,n)=>{n+1<=l[e].length&&(t.before(l[e][n]),t.parentElement.removeChild(t))}));const i=t.querySelectorAll(`[${M}]`);if(f.length!==i.length){console.error(`Liquid Ajax Cart: the received HTML for the "${n}" section has a different quantity of the "${M}" containers. The section will be updated completely.`);const e=t.querySelector(`#${_}${n}`);if(e){for(r.innerHTML="";e.childNodes.length;)r.appendChild(e.firstChild);a.push(r)}}else f.forEach(((t,e)=>{t.before(i[e]),t.parentElement.removeChild(t),a.push(i[e])}))}for(let e in c)r.querySelectorAll(` [${U}="${e.replace(u,"")}"] `).forEach(((n,r)=>{r+1<=c[e].length&&(t.requestType!==s||c[e][r].height>=n.scrollHeight)&&(n.scrollTop=c[e][r].scroll)}));a.length>0&&i.push({id:n,elements:a})})):console.error(`Liquid Ajax Cart: the HTML for the "${n}" section was requested but the response is ${e[n]}`)}if(i.length>0){const t=new CustomEvent(F,{detail:i});document.dispatchEvent(t)}}))})),document.addEventListener(f,(t=>{const{requestState:e,onResult:n}=t.detail;let r;e.requestType===s?r=(t=>{var e;let n;const r=null===(e=t.info)||void 0===e?void 0:e.initiator;return r instanceof W&&(n=r.querySelectorAll(`[${St}="form"]`)),n})(e):e.requestType===a&&(r=(t=>{var e;let n;const r=k();let o,i;if(t.requestBody instanceof FormData||t.requestBody instanceof URLSearchParams?(t.requestBody.has("line")&&(i=t.requestBody.get("line").toString()),t.requestBody.has("id")&&(o=t.requestBody.get("id").toString())):("line"in t.requestBody&&(i=String(t.requestBody.line)),"id"in t.requestBody&&(o=String(t.requestBody.id))),i){const t=Number(i);if(t>0&&r.status.cartStateSet){const n=t-1;o=null===(e=r.cart.items[n])||void 0===e?void 0:e.key}}return o&&(o.indexOf(":")>-1?n=document.querySelectorAll(`[${St}="${o}"]`):r.status.cartStateSet&&(n=document.querySelectorAll(r.cart.items.reduce(((t,e)=>(e.key!==o&&e.id!==Number(o)||t.push(`[${St}="${e.key}"]`),t)),[]).join(",")))),n})(e)),r&&r.length>0&&(r.forEach((t=>{t.textContent=""})),n((t=>{if(t.info.cancel)return;const e=function(t){var e;const{requestErrorText:n}=R;if(null===(e=t.responseData)||void 0===e?void 0:e.ok)return"";if("responseData"in t){if("description"in t.responseData.body&&t.responseData.body.description)return t.responseData.body.description;if("message"in t.responseData.body&&t.responseData.body.message)return t.responseData.body.message}return n}(t);e&&r.forEach((t=>{t.textContent=e}))})))})),function(){document.addEventListener(d,(t=>{C.requestInProgress=t.detail.inProgress,D(!1)})),document.addEventListener(f,(t=>{const{onResult:e}=t.detail;e((t=>{var e,n;let r;(null===(e=t.extraResponseData)||void 0===e?void 0:e.ok)&&(r=T(t.extraResponseData.body)),!r&&(null===(n=t.responseData)||void 0===n?void 0:n.ok)&&(t.requestType===s?$():r=T(t.responseData.body)),r?(L=x,x=r,C.cartStateSet=!0,D(!0)):null===r&&console.error("Liquid Ajax Cart: expected to receive the updated cart state but the object is not recognized. The request state:",t)}))}));const t=document.querySelector(`[${E}]`);if(t)try{const e=JSON.parse(t.textContent);if(x=T(e),null===x)throw`JSON from ${E} script is not correct cart object`;C.cartStateSet=!0,D(!0)}catch(t){console.error(`Liquid Ajax Cart: can't parse cart JSON from the "${E}" script. A /cart.js request will be performed to receive the cart state`),console.error(t),g()}else g()}(),document.addEventListener(j,(t=>{P(t.detail.state)})),P(k()),customElements.define(Q,W),document.addEventListener("click",(function(t){for(let e=t.target;e&&e!=document.documentElement;e=e.parentElement)st(e,t)}),!1),document.addEventListener("change",(function(t){vt(t.target,t)}),!1),document.addEventListener("keydown",(function(t){const e=t.target;"Enter"===t.key&&(e instanceof HTMLTextAreaElement&&!t.ctrlKey||vt(e,t)),"Escape"===t.key&&function(t){if(!pt(t))return;if(!(t instanceof HTMLInputElement||t instanceof HTMLTextAreaElement))return;if(t instanceof HTMLInputElement&&("checkbox"===t.type||"radio"===t.type))return;const e=k();if(!e.status.cartStateSet)return void t.blur();const{objectCode:n,propertyName:r}=mt(t);if(!n)return;let o;if("note"===n)o=e.cart.note;else if("attributes"===n)o=e.cart.attributes[r];else{const[t]=at(n,e);t&&(o=t.properties[r])}void 0!==o&&(o||"string"==typeof o||o instanceof String||(o=""),t.value=String(o)),t.blur()}(e)}),!1),document.addEventListener(j,(t=>{yt(t.detail.state)})),yt(k()),document.addEventListener("change",(function(t){dt(t.target,t)}),!1),document.addEventListener("keydown",(function(t){"Enter"===t.key&&dt(t.target,t),"Escape"===t.key&&function(t){if(!ct(t))return;const e=t.getAttribute(ut).trim();let n;const r=k();if(r.status.cartStateSet){if(e.length>3)n=r.cart.items.find((t=>t.key===e));else{const t=Number(e)-1;n=r.cart.items[t]}n&&(t.value=n.quantity.toString())}t.blur()}(t.target)}),!1),document.addEventListener(j,(t=>{lt(t.detail.state)})),lt(k()),function(){var t,e,n,r,o,i;customElements.define(qt,(i=class extends HTMLElement{constructor(){super(),t.add(this),e.set(this,void 0),n.set(this,void 0);const i=this.querySelectorAll("input");1===i.length?(bt(this,n,i[0],"f"),gt(this,n,"f").hasAttribute(ut)?this.querySelectorAll(`[${wt}], [${$t}]`).forEach((i=>{i.addEventListener("click",(e=>{const o=k();if(!o.status.requestInProgress&&o.status.cartStateSet){const e=Number(gt(this,n,"f").value);if(isNaN(e))return void console.error(`Liquid Ajax Cart: "${qt}" element's input value isn't a number`,gt(this,n,"f"),this);let o=e;o=i.hasAttribute(wt)?o+1:o-1,o<1&&(o=1),o!==e&&(gt(this,n,"f").value=o.toString(),gt(this,t,"m",r).call(this))}e.preventDefault()})),i.addEventListener("focusout",(n=>{n.relatedTarget&&i.contains(n.relatedTarget)||void 0!==gt(this,e,"f")&&gt(this,t,"m",o).call(this)}))})):console.error(`Liquid Ajax Cart: "${qt}" element's input must have the "${ut}" attribute`,gt(this,n,"f"),this)):console.error(`Liquid Ajax Cart: "${qt}" element must have one "input" element as a child, ${i.length} found`,this)}},e=new WeakMap,n=new WeakMap,t=new WeakSet,r=function(){void 0!==gt(this,e,"f")&&clearTimeout(gt(this,e,"f")),bt(this,e,setTimeout((()=>{gt(this,t,"m",o).call(this)}),300),"f")},o=function(){void 0!==gt(this,e,"f")&&clearTimeout(gt(this,e,"f")),bt(this,e,void 0,"f");const t=k();!t.status.requestInProgress&&t.status.cartStateSet&&gt(this,n,"f").dispatchEvent(new Event("change",{bubbles:!0}))},i))}(),document.addEventListener(j,(t=>{xt(t.detail.state)})),xt(k()),window.liquidAjaxCart=new class{constructor(){this.conf=I,this.get=g,this.add=q,this.change=w,this.update=$,this.clear=S}get state(){return k()}set state(t){throw new Error('Liquid Ajax Cart: the "state" is a read-only property')}};const t=new CustomEvent(`${n}:init`);document.body.dispatchEvent(t),window.addEventListener("focus",(()=>{R.updateOnWindowFocus&&$({},{})}))}const Ct=window.liquidAjaxCart;var Tt=e.Z;export{Tt as default};