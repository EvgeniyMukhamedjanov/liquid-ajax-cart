/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ var __webpack_modules__ = ({

/***/ "./_src/ajax-api.ts":
/*!**************************!*\
  !*** ./_src/ajax-api.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EVENT_QUEUE_END\": () => (/* binding */ EVENT_QUEUE_END),\n/* harmony export */   \"EVENT_QUEUE_START\": () => (/* binding */ EVENT_QUEUE_START),\n/* harmony export */   \"EVENT_REQUEST_END\": () => (/* binding */ EVENT_REQUEST_END),\n/* harmony export */   \"EVENT_REQUEST_START\": () => (/* binding */ EVENT_REQUEST_START),\n/* harmony export */   \"REQUEST_ADD\": () => (/* binding */ REQUEST_ADD),\n/* harmony export */   \"REQUEST_CHANGE\": () => (/* binding */ REQUEST_CHANGE),\n/* harmony export */   \"cartRequestAdd\": () => (/* binding */ cartRequestAdd),\n/* harmony export */   \"cartRequestChange\": () => (/* binding */ cartRequestChange),\n/* harmony export */   \"cartRequestClear\": () => (/* binding */ cartRequestClear),\n/* harmony export */   \"cartRequestGet\": () => (/* binding */ cartRequestGet),\n/* harmony export */   \"cartRequestUpdate\": () => (/* binding */ cartRequestUpdate),\n/* harmony export */   \"getProcessingStatus\": () => (/* binding */ getProcessingStatus)\n/* harmony export */ });\n/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./const */ \"./_src/const.ts\");\n\r\nconst REQUEST_ADD = 'add';\r\nconst REQUEST_CHANGE = 'change';\r\nconst REQUEST_UPDATE = 'update';\r\nconst REQUEST_CLEAR = 'clear';\r\nconst REQUEST_GET = 'get';\r\nconst EVENT_QUEUE_START = `${_const__WEBPACK_IMPORTED_MODULE_0__.EVENT_PREFIX}:queue-start`;\r\nconst EVENT_QUEUE_END = `${_const__WEBPACK_IMPORTED_MODULE_0__.EVENT_PREFIX}:queue-end`;\r\nconst EVENT_REQUEST_START = `${_const__WEBPACK_IMPORTED_MODULE_0__.EVENT_PREFIX}:request-start`;\r\nconst EVENT_REQUEST_END = `${_const__WEBPACK_IMPORTED_MODULE_0__.EVENT_PREFIX}:request-end`;\r\nconst queues = [];\r\nlet processing = false;\r\nfunction addToQueues(queueItem) {\r\n    var _a;\r\n    if (!((_a = queueItem.options) === null || _a === void 0 ? void 0 : _a.important) || queues.length === 0) {\r\n        const newLength = queues.push([queueItem]);\r\n        if (newLength === 1) {\r\n            setProcessingStatus(true);\r\n            runQueues();\r\n        }\r\n        return;\r\n    }\r\n    queues[0].push(queueItem);\r\n    return;\r\n}\r\nfunction runQueues() {\r\n    if (queues.length === 0) {\r\n        setProcessingStatus(false);\r\n        return;\r\n    }\r\n    if (queues[0].length === 0) {\r\n        queues.shift();\r\n        runQueues();\r\n        return;\r\n    }\r\n    const { requestType, body, options } = queues[0][0];\r\n    cartRequest(requestType, body, options, () => {\r\n        queues[0].shift();\r\n        runQueues();\r\n    });\r\n    return;\r\n}\r\nfunction setProcessingStatus(value) {\r\n    processing = value;\r\n    const event = new CustomEvent(processing ? EVENT_QUEUE_START : EVENT_QUEUE_END);\r\n    document.dispatchEvent(event);\r\n}\r\nfunction cartRequest(requestType, body, options, finalCallback = undefined) {\r\n    const endpoint = getEndpoint(requestType);\r\n    let requestBody = undefined;\r\n    if (requestType !== REQUEST_GET) {\r\n        requestBody = body || {};\r\n    }\r\n    const method = requestType === REQUEST_GET ? 'GET' : 'POST';\r\n    const info = options.info || {};\r\n    const resultSubscribers = 'firstComplete' in options ? [options.firstComplete] : [];\r\n    const requestState = {\r\n        requestType,\r\n        endpoint,\r\n        requestBody,\r\n        info\r\n    };\r\n    const redundantSections = [];\r\n    const event = new CustomEvent(EVENT_REQUEST_START, {\r\n        detail: {\r\n            requestState: {\r\n                requestType,\r\n                endpoint,\r\n                info,\r\n                requestBody\r\n            }\r\n        }\r\n    });\r\n    document.dispatchEvent(event);\r\n    if ('lastComplete' in options) {\r\n        resultSubscribers.push(options.lastComplete);\r\n    }\r\n    if (info.cancel) {\r\n        requestState.responseData = null;\r\n        cartRequestFinally(resultSubscribers, finalCallback, requestState);\r\n        return;\r\n    }\r\n    if (requestBody !== undefined) {\r\n        let sectionsParam = undefined;\r\n        if (requestBody instanceof FormData || requestBody instanceof URLSearchParams) {\r\n            if (requestBody.has('sections')) {\r\n                sectionsParam = requestBody.get('sections').toString();\r\n            }\r\n        }\r\n        else {\r\n            sectionsParam = requestBody.sections;\r\n        }\r\n        if (typeof sectionsParam === 'string' || sectionsParam instanceof String || Array.isArray(sectionsParam)) {\r\n            const allSections = [];\r\n            if (Array.isArray(sectionsParam)) {\r\n                allSections.push(...sectionsParam);\r\n            }\r\n            else {\r\n                allSections.push(...(sectionsParam.split(',')));\r\n            }\r\n            if (allSections.length > 5) {\r\n                redundantSections.push(...allSections.slice(5));\r\n                const newSectionsParam = allSections.slice(0, 5).join(',');\r\n                if (requestBody instanceof FormData || requestBody instanceof URLSearchParams) {\r\n                    requestBody.set('sections', newSectionsParam);\r\n                }\r\n                else {\r\n                    requestBody.sections = newSectionsParam;\r\n                }\r\n            }\r\n        }\r\n        else if (sectionsParam !== undefined && sectionsParam !== null) {\r\n            console.error(`Liquid Ajax Cart: \"sections\" parameter in a Cart Ajax API request must be a string or an array. Now it is ${sectionsParam}`);\r\n        }\r\n    }\r\n    const fetchPayload = {\r\n        method\r\n    };\r\n    if (requestType !== REQUEST_GET) {\r\n        if (requestBody instanceof FormData || requestBody instanceof URLSearchParams) {\r\n            fetchPayload.body = requestBody;\r\n            fetchPayload.headers = {\r\n                'x-requested-with': 'XMLHttpRequest'\r\n            };\r\n        }\r\n        else {\r\n            fetchPayload.body = JSON.stringify(requestBody);\r\n            fetchPayload.headers = {\r\n                'Content-Type': 'application/json'\r\n            };\r\n        }\r\n    }\r\n    fetch(endpoint, fetchPayload).then(response => {\r\n        return response.json().then((responseBody) => {\r\n            return {\r\n                ok: response.ok,\r\n                status: response.status,\r\n                body: responseBody\r\n            };\r\n        });\r\n    }).then(data => {\r\n        requestState.responseData = data;\r\n        if (!(requestState.responseData.ok) || (requestState.responseData.body.token && redundantSections.length === 0)) {\r\n            return requestState;\r\n        }\r\n        return extraRequest(redundantSections).then(extraResponseData => {\r\n            requestState.extraResponseData = extraResponseData;\r\n            return requestState;\r\n        });\r\n    }).catch(error => {\r\n        console.error('Liquid Ajax Cart: Error while performing cart Ajax request');\r\n        console.error(error);\r\n        requestState.responseData = null;\r\n        requestState.fetchError = error;\r\n    }).finally(() => {\r\n        cartRequestFinally(resultSubscribers, finalCallback, requestState);\r\n    });\r\n}\r\nfunction cartRequestFinally(resultSubscribers, finalCallback, requestState) {\r\n    const event = new CustomEvent(EVENT_REQUEST_END, {\r\n        detail: {\r\n            requestState\r\n        }\r\n    });\r\n    document.dispatchEvent(event);\r\n    resultSubscribers.forEach(callback => {\r\n        try {\r\n            callback(requestState);\r\n        }\r\n        catch (e) {\r\n            console.error('Liquid Ajax Cart: Error during Ajax request result callback in ajax-api');\r\n            console.error(e);\r\n        }\r\n    });\r\n    if (finalCallback) {\r\n        try {\r\n            finalCallback();\r\n        }\r\n        catch (e) {\r\n            console.error('Liquid Ajax Cart: Error during Ajax request final internal callback in ajax-api');\r\n            console.error(e);\r\n        }\r\n    }\r\n}\r\nfunction extraRequest(sections = []) {\r\n    const requestBody = {};\r\n    if (sections.length > 0) {\r\n        requestBody.sections = sections.slice(0, 5).join(',');\r\n    }\r\n    return fetch(getEndpoint(REQUEST_UPDATE), {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(requestBody)\r\n    }).then(response => response.json().then(responseBody => {\r\n        const data = {\r\n            ok: response.ok,\r\n            status: response.status,\r\n            body: responseBody\r\n        };\r\n        if (sections.length < 6) {\r\n            return data;\r\n        }\r\n        return extraRequest(sections.slice(5)).then(addData => {\r\n            var _a;\r\n            if (addData.ok && ((_a = addData.body) === null || _a === void 0 ? void 0 : _a.sections) && typeof addData.body.sections === 'object') {\r\n                if (!('sections' in data.body)) {\r\n                    data.body.sections = {};\r\n                }\r\n                data.body.sections = Object.assign(Object.assign({}, data.body.sections), addData.body.sections);\r\n            }\r\n            return data;\r\n        });\r\n    }));\r\n}\r\nfunction cartRequestGet(options = {}) {\r\n    addToQueues({ requestType: REQUEST_GET, body: undefined, options });\r\n}\r\nfunction cartRequestAdd(body = {}, options = {}) {\r\n    addToQueues({ requestType: REQUEST_ADD, body, options });\r\n}\r\nfunction cartRequestChange(body = {}, options = {}) {\r\n    addToQueues({ requestType: REQUEST_CHANGE, body, options });\r\n}\r\nfunction cartRequestUpdate(body = {}, options = {}) {\r\n    addToQueues({ requestType: REQUEST_UPDATE, body, options });\r\n}\r\nfunction cartRequestClear(body = {}, options = {}) {\r\n    addToQueues({ requestType: REQUEST_CLEAR, body, options });\r\n}\r\nfunction getEndpoint(requestType) {\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\r\n    switch (requestType) {\r\n        case REQUEST_ADD:\r\n            return `${((_b = (_a = window.Shopify) === null || _a === void 0 ? void 0 : _a.routes) === null || _b === void 0 ? void 0 : _b.root) || '/'}cart/add.js`;\r\n        case REQUEST_CHANGE:\r\n            return `${((_d = (_c = window.Shopify) === null || _c === void 0 ? void 0 : _c.routes) === null || _d === void 0 ? void 0 : _d.root) || '/'}cart/change.js`;\r\n        case REQUEST_GET:\r\n            return `${((_f = (_e = window.Shopify) === null || _e === void 0 ? void 0 : _e.routes) === null || _f === void 0 ? void 0 : _f.root) || '/'}cart.js`;\r\n        case REQUEST_CLEAR:\r\n            return `${((_h = (_g = window.Shopify) === null || _g === void 0 ? void 0 : _g.routes) === null || _h === void 0 ? void 0 : _h.root) || '/'}cart/clear.js`;\r\n        case REQUEST_UPDATE:\r\n            return `${((_k = (_j = window.Shopify) === null || _j === void 0 ? void 0 : _j.routes) === null || _k === void 0 ? void 0 : _k.root) || '/'}cart/update.js`;\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\nfunction getProcessingStatus() {\r\n    return processing;\r\n}\r\n\r\n\n\n//# sourceURL=webpack://liquid-ajax-cart/./_src/ajax-api.ts?");

/***/ }),

/***/ "./_src/const.ts":
/*!***********************!*\
  !*** ./_src/const.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CSS_CLASS_PREFIX\": () => (/* binding */ CSS_CLASS_PREFIX),\n/* harmony export */   \"CUSTOM_ELEMENT_PREFIX\": () => (/* binding */ CUSTOM_ELEMENT_PREFIX),\n/* harmony export */   \"DATA_ATTR_PREFIX\": () => (/* binding */ DATA_ATTR_PREFIX),\n/* harmony export */   \"EVENT_PREFIX\": () => (/* binding */ EVENT_PREFIX)\n/* harmony export */ });\nconst EVENT_PREFIX = 'liquid-ajax-cart';\r\nconst DATA_ATTR_PREFIX = 'data-ajax-cart';\r\nconst CUSTOM_ELEMENT_PREFIX = 'ajax-cart';\r\nconst CSS_CLASS_PREFIX = 'js-ajax-cart';\r\n\n\n//# sourceURL=webpack://liquid-ajax-cart/./_src/const.ts?");

/***/ }),

/***/ "./_src/controls.ts":
/*!**************************!*\
  !*** ./_src/controls.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cartControlsInit\": () => (/* binding */ cartControlsInit)\n/* harmony export */ });\n/* harmony import */ var _controls_product_form_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./controls/product-form-element */ \"./_src/controls/product-form-element.ts\");\n/* harmony import */ var _controls_request_button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./controls/request-button */ \"./_src/controls/request-button.ts\");\n/* harmony import */ var _controls_quantity_input__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./controls/quantity-input */ \"./_src/controls/quantity-input.ts\");\n/* harmony import */ var _controls_property_input__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./controls/property-input */ \"./_src/controls/property-input.ts\");\n/* harmony import */ var _controls_quantity_element__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./controls/quantity-element */ \"./_src/controls/quantity-element.ts\");\n\r\n\r\n\r\n\r\n\r\nfunction cartControlsInit() {\r\n    (0,_controls_product_form_element__WEBPACK_IMPORTED_MODULE_0__.cartProductFormElementInit)();\r\n    (0,_controls_request_button__WEBPACK_IMPORTED_MODULE_1__.cartRequestButtonInit)();\r\n    (0,_controls_property_input__WEBPACK_IMPORTED_MODULE_3__.cartPropertyInputInit)();\r\n    (0,_controls_quantity_input__WEBPACK_IMPORTED_MODULE_2__.cartQuantityInputInit)();\r\n    (0,_controls_quantity_element__WEBPACK_IMPORTED_MODULE_4__.cartQuantityElementInit)();\r\n}\r\n\r\n\n\n//# sourceURL=webpack://liquid-ajax-cart/./_src/controls.ts?");

/***/ }),

/***/ "./_src/controls/product-form-element.ts":
/*!***********************************************!*\
  !*** ./_src/controls/product-form-element.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"HTMLProductFormElement\": () => (/* binding */ HTMLProductFormElement),\n/* harmony export */   \"cartProductFormElementInit\": () => (/* binding */ cartProductFormElementInit)\n/* harmony export */ });\n/* harmony import */ var _ajax_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ajax-api */ \"./_src/ajax-api.ts\");\n/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../const */ \"./_src/const.ts\");\n\r\n\r\nconst ELEMENT_TAG = `${_const__WEBPACK_IMPORTED_MODULE_1__.CUSTOM_ELEMENT_PREFIX}-product-form`;\r\nconst DATA_ATTR_LOADING = 'processing';\r\nclass HTMLProductFormElement extends HTMLElement {\r\n    constructor() {\r\n        var _a, _b;\r\n        super();\r\n        const $element = this;\r\n        const $innerForms = this.querySelectorAll('form');\r\n        if ($innerForms.length !== 1) {\r\n            console.error(`Liquid Ajax Cart: \"${ELEMENT_TAG}\" element must have one \"form\" element as a child, ${$innerForms.length} found`, $element);\r\n            return;\r\n        }\r\n        const $form = $innerForms[0];\r\n        const formActionUrl = new URL($form.action);\r\n        if (formActionUrl.pathname !== `${((_b = (_a = window.Shopify) === null || _a === void 0 ? void 0 : _a.routes) === null || _b === void 0 ? void 0 : _b.root) || '/'}cart/add`) {\r\n            console.error(`Liquid Ajax Cart: \"${ELEMENT_TAG}\" element's form \"action\" attribute value isn't a product form action URL`, $form, $element);\r\n            return;\r\n        }\r\n        $form.addEventListener('submit', event => {\r\n            if (!$element.hasAttribute(DATA_ATTR_LOADING)) {\r\n                const formData = new FormData($form);\r\n                $element.setAttribute(DATA_ATTR_LOADING, '');\r\n                (0,_ajax_api__WEBPACK_IMPORTED_MODULE_0__.cartRequestAdd)(formData, {\r\n                    lastComplete: () => {\r\n                        $element.removeAttribute(DATA_ATTR_LOADING);\r\n                    },\r\n                    info: {\r\n                        \"initiator\": $element\r\n                    }\r\n                });\r\n            }\r\n            event.preventDefault();\r\n        });\r\n    }\r\n}\r\nfunction cartProductFormElementInit() {\r\n    customElements.define(ELEMENT_TAG, HTMLProductFormElement);\r\n}\r\n\r\n\n\n//# sourceURL=webpack://liquid-ajax-cart/./_src/controls/product-form-element.ts?");

/***/ }),

/***/ "./_src/controls/property-input.ts":
/*!*****************************************!*\
  !*** ./_src/controls/property-input.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cartPropertyInputInit\": () => (/* binding */ cartPropertyInputInit)\n/* harmony export */ });\n/* harmony import */ var _ajax_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ajax-api */ \"./_src/ajax-api.ts\");\n/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../state */ \"./_src/state.ts\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers */ \"./_src/helpers.ts\");\n/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../const */ \"./_src/const.ts\");\n\r\n\r\n\r\n\r\nconst DATA_ATTR_PROPERTY_INPUT = `${_const__WEBPACK_IMPORTED_MODULE_3__.DATA_ATTR_PREFIX}-property-input`;\r\nfunction consoleInputError(element) {\r\n    const attributeValue = element.getAttribute(DATA_ATTR_PROPERTY_INPUT);\r\n    const nameValue = element.getAttribute('name');\r\n    console.error(`Liquid Ajax Cart: the element [${DATA_ATTR_PROPERTY_INPUT}=\"${attributeValue}\"]${nameValue ? `[name=\"${nameValue}\"]` : ''} has wrong attributes.`);\r\n}\r\nfunction isValidElement(element) {\r\n    if (!(element.hasAttribute(DATA_ATTR_PROPERTY_INPUT))) {\r\n        return false;\r\n    }\r\n    return !((!(element instanceof HTMLInputElement) || element.type === 'hidden')\r\n        && !(element instanceof HTMLTextAreaElement)\r\n        && !(element instanceof HTMLSelectElement));\r\n}\r\nfunction getInputData(element) {\r\n    const result = {\r\n        objectCode: undefined,\r\n        propertyName: undefined,\r\n        attributeValue: undefined\r\n    };\r\n    if (!(element.hasAttribute(DATA_ATTR_PROPERTY_INPUT))) {\r\n        return result;\r\n    }\r\n    let attributeValue = element.getAttribute(DATA_ATTR_PROPERTY_INPUT).trim();\r\n    if (!attributeValue) {\r\n        const nameValue = element.getAttribute('name').trim();\r\n        if (nameValue) {\r\n            attributeValue = nameValue;\r\n        }\r\n    }\r\n    if (!attributeValue) {\r\n        consoleInputError(element);\r\n        return result;\r\n    }\r\n    result.attributeValue = attributeValue;\r\n    if (attributeValue === 'note') {\r\n        result.objectCode = 'note';\r\n        return result;\r\n    }\r\n    let [objectCode, ...propertyName] = attributeValue.trim().split('[');\r\n    if (!propertyName\r\n        || propertyName.length !== 1\r\n        || propertyName[0].length < 2\r\n        || propertyName[0].indexOf(']') !== propertyName[0].length - 1) {\r\n        consoleInputError(element);\r\n        return result;\r\n    }\r\n    result.objectCode = objectCode;\r\n    result.propertyName = propertyName[0].replace(']', '');\r\n    return result;\r\n}\r\nfunction initEventListeners() {\r\n    document.addEventListener('change', function (e) {\r\n        changeHandler(e.target, e);\r\n    }, false);\r\n    document.addEventListener(\"keydown\", function (e) {\r\n        const element = e.target;\r\n        if (e.key === \"Enter\") {\r\n            if (!(element instanceof HTMLTextAreaElement) || e.ctrlKey) {\r\n                changeHandler(element, e);\r\n            }\r\n        }\r\n        if (e.key === \"Escape\") {\r\n            escHandler(element);\r\n        }\r\n    }, false);\r\n}\r\nfunction processingHandler() {\r\n    document.querySelectorAll(`[${DATA_ATTR_PROPERTY_INPUT}]`).forEach(element => {\r\n        if (!isValidElement(element)) {\r\n            return;\r\n        }\r\n        if ((0,_ajax_api__WEBPACK_IMPORTED_MODULE_0__.getProcessingStatus)()) {\r\n            element.disabled = true;\r\n            return;\r\n        }\r\n        const { objectCode, propertyName, attributeValue } = getInputData(element);\r\n        if (!objectCode) {\r\n            return;\r\n        }\r\n        const state = (0,_state__WEBPACK_IMPORTED_MODULE_1__.getCartState)();\r\n        let propertyValue = undefined;\r\n        let doNotEnable = false;\r\n        if (objectCode === 'note') {\r\n            propertyValue = state.cart.note;\r\n        }\r\n        else if (objectCode === 'attributes') {\r\n            propertyValue = state.cart.attributes[propertyName];\r\n        }\r\n        else {\r\n            const [lineItem, objectCodeType] = (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.findLineItemByCode)(objectCode, state);\r\n            if (lineItem) {\r\n                propertyValue = lineItem.properties[propertyName];\r\n            }\r\n            if (lineItem === null) {\r\n                console.error(`Liquid Ajax Cart: line item with ${objectCodeType}=\"${objectCode}\" was not found when the [${DATA_ATTR_PROPERTY_INPUT}] element with \"${attributeValue}\" value tried to get updated from the State`);\r\n                doNotEnable = true;\r\n            }\r\n        }\r\n        if (element instanceof HTMLInputElement && (element.type === 'checkbox' || element.type === 'radio')) {\r\n            element.checked = element.value === propertyValue;\r\n        }\r\n        else {\r\n            if (typeof propertyValue !== 'string'\r\n                && !(propertyValue instanceof String)\r\n                && typeof propertyValue !== 'number'\r\n                && !(propertyValue instanceof Number)) {\r\n                if (Array.isArray(propertyValue) || propertyValue instanceof Object) {\r\n                    propertyValue = JSON.stringify(propertyValue);\r\n                    console.warn(`Liquid Ajax Cart: the ${DATA_ATTR_PROPERTY_INPUT} with the \"${attributeValue}\" value is bound to the ${propertyName} ${objectCode === 'attributes' ? 'attribute' : 'property'} that is not string or number: ${propertyValue}`);\r\n                }\r\n                else {\r\n                    propertyValue = '';\r\n                }\r\n            }\r\n            element.value = propertyValue;\r\n        }\r\n        if (!doNotEnable) {\r\n            element.disabled = false;\r\n        }\r\n    });\r\n}\r\nfunction changeHandler(element, e) {\r\n    if (!isValidElement(element)) {\r\n        return;\r\n    }\r\n    if (e) {\r\n        e.preventDefault(); // prevent form submission\r\n    }\r\n    element.blur();\r\n    const state = (0,_state__WEBPACK_IMPORTED_MODULE_1__.getCartState)();\r\n    if ((0,_ajax_api__WEBPACK_IMPORTED_MODULE_0__.getProcessingStatus)()) {\r\n        return;\r\n    }\r\n    const { objectCode, propertyName, attributeValue } = getInputData(element);\r\n    if (!objectCode) {\r\n        return;\r\n    }\r\n    let newPropertyValue = element.value;\r\n    if (element instanceof HTMLInputElement && element.type === 'checkbox' && !element.checked) {\r\n        let negativeValueInput = document.querySelector(`input[type=\"hidden\"][${DATA_ATTR_PROPERTY_INPUT}=\"${attributeValue}\"]`);\r\n        if (!negativeValueInput && (objectCode === 'note' || objectCode === 'attributes')) {\r\n            negativeValueInput = document.querySelector(`input[type=\"hidden\"][${DATA_ATTR_PROPERTY_INPUT}][name=\"${attributeValue}\"]`);\r\n        }\r\n        if (negativeValueInput) {\r\n            newPropertyValue = negativeValueInput.value;\r\n        }\r\n        else {\r\n            newPropertyValue = '';\r\n        }\r\n    }\r\n    if (objectCode === 'note') {\r\n        const formData = new FormData();\r\n        formData.set('note', newPropertyValue);\r\n        (0,_ajax_api__WEBPACK_IMPORTED_MODULE_0__.cartRequestUpdate)(formData, { info: { initiator: element } });\r\n    }\r\n    else if (objectCode === 'attributes') {\r\n        const formData = new FormData();\r\n        formData.set(`attributes[${propertyName}]`, newPropertyValue);\r\n        (0,_ajax_api__WEBPACK_IMPORTED_MODULE_0__.cartRequestUpdate)(formData, { info: { initiator: element } });\r\n    }\r\n    else {\r\n        const [lineItem, objectCodeType] = (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.findLineItemByCode)(objectCode, state);\r\n        if (lineItem === null) {\r\n            console.error(`Liquid Ajax Cart: line item with ${objectCodeType}=\"${objectCode}\" was not found when the [${DATA_ATTR_PROPERTY_INPUT}] element with \"${attributeValue}\" value tried to update the cart`);\r\n        }\r\n        if (!lineItem) {\r\n            return;\r\n        }\r\n        const newProperties = Object.assign({}, lineItem.properties);\r\n        newProperties[propertyName] = newPropertyValue;\r\n        const formData = new FormData();\r\n        let requestBody = formData;\r\n        formData.set(objectCodeType, objectCode);\r\n        formData.set('quantity', lineItem.quantity.toString());\r\n        for (let p in newProperties) {\r\n            const v = newProperties[p];\r\n            if (typeof v === 'string' || v instanceof String) {\r\n                formData.set(`properties[${p}]`, newProperties[p]);\r\n            }\r\n            else {\r\n                requestBody = {\r\n                    [objectCodeType]: objectCode,\r\n                    quantity: lineItem.quantity,\r\n                    properties: newProperties\r\n                };\r\n            }\r\n        }\r\n        (0,_ajax_api__WEBPACK_IMPORTED_MODULE_0__.cartRequestChange)(requestBody, { info: { initiator: element } });\r\n    }\r\n}\r\nfunction escHandler(element) {\r\n    if (!isValidElement(element)) {\r\n        return;\r\n    }\r\n    if (!(element instanceof HTMLInputElement) && !(element instanceof HTMLTextAreaElement)) {\r\n        return;\r\n    }\r\n    if (element instanceof HTMLInputElement && (element.type === 'checkbox' || element.type === 'radio')) {\r\n        return;\r\n    }\r\n    const state = (0,_state__WEBPACK_IMPORTED_MODULE_1__.getCartState)();\r\n    const { objectCode, propertyName } = getInputData(element);\r\n    if (!objectCode) {\r\n        return;\r\n    }\r\n    let propertyValue = undefined;\r\n    if (objectCode === 'note') {\r\n        propertyValue = state.cart.note;\r\n    }\r\n    else if (objectCode === 'attributes') {\r\n        propertyValue = state.cart.attributes[propertyName];\r\n    }\r\n    else {\r\n        const [lineItem] = (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.findLineItemByCode)(objectCode, state);\r\n        if (lineItem) {\r\n            propertyValue = lineItem.properties[propertyName];\r\n        }\r\n    }\r\n    if (propertyValue !== undefined) {\r\n        if (!propertyValue && typeof propertyValue !== 'string' && !(propertyValue instanceof String)) {\r\n            propertyValue = '';\r\n        }\r\n        element.value = String(propertyValue);\r\n    }\r\n    element.blur();\r\n}\r\nfunction cartPropertyInputInit() {\r\n    initEventListeners();\r\n    document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_0__.EVENT_QUEUE_START, processingHandler);\r\n    document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_0__.EVENT_REQUEST_END, processingHandler);\r\n    document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_0__.EVENT_QUEUE_END, processingHandler);\r\n    processingHandler();\r\n}\r\n\r\n\n\n//# sourceURL=webpack://liquid-ajax-cart/./_src/controls/property-input.ts?");

/***/ }),

/***/ "./_src/controls/quantity-element.ts":
/*!*******************************************!*\
  !*** ./_src/controls/quantity-element.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cartQuantityElementInit\": () => (/* binding */ cartQuantityElementInit)\n/* harmony export */ });\n/* harmony import */ var _quantity_input__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./quantity-input */ \"./_src/controls/quantity-input.ts\");\n/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../const */ \"./_src/const.ts\");\n/* harmony import */ var _ajax_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ajax-api */ \"./_src/ajax-api.ts\");\nvar __classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\n\r\n\r\n\r\nconst ELEMENT_TAG = `${_const__WEBPACK_IMPORTED_MODULE_1__.CUSTOM_ELEMENT_PREFIX}-quantity`;\r\nconst DATA_ATTR_QUANTITY_PLUS = `${_const__WEBPACK_IMPORTED_MODULE_1__.DATA_ATTR_PREFIX}-quantity-plus`;\r\nconst DATA_ATTR_QUANTITY_MINUS = `${_const__WEBPACK_IMPORTED_MODULE_1__.DATA_ATTR_PREFIX}-quantity-minus`;\r\nconst AWAITING_TIME = 300;\r\nfunction cartQuantityElementInit() {\r\n    var _instances, _timer, _$input, _runAwaiting, _runRequest, _a;\r\n    customElements.define(ELEMENT_TAG, (_a = class extends HTMLElement {\r\n            constructor() {\r\n                super();\r\n                _instances.add(this);\r\n                _timer.set(this, undefined);\r\n                _$input.set(this, void 0);\r\n                const $innerInputs = this.querySelectorAll('input');\r\n                if ($innerInputs.length !== 1) {\r\n                    console.error(`Liquid Ajax Cart: \"${ELEMENT_TAG}\" element must have one \"input\" element as a child, ${$innerInputs.length} found`, this);\r\n                    return;\r\n                }\r\n                __classPrivateFieldSet(this, _$input, $innerInputs[0], \"f\");\r\n                if (!__classPrivateFieldGet(this, _$input, \"f\").hasAttribute(_quantity_input__WEBPACK_IMPORTED_MODULE_0__.DATA_ATTR_QUANTITY_INPUT)) {\r\n                    console.error(`Liquid Ajax Cart: \"${ELEMENT_TAG}\" element's input must have the \"${_quantity_input__WEBPACK_IMPORTED_MODULE_0__.DATA_ATTR_QUANTITY_INPUT}\" attribute`, __classPrivateFieldGet(this, _$input, \"f\"), this);\r\n                    return;\r\n                }\r\n                this.querySelectorAll(`[${DATA_ATTR_QUANTITY_PLUS}], [${DATA_ATTR_QUANTITY_MINUS}]`).forEach($button => {\r\n                    $button.addEventListener('click', event => {\r\n                        if (!(0,_ajax_api__WEBPACK_IMPORTED_MODULE_2__.getProcessingStatus)()) {\r\n                            const qtyValueCurrent = Number(__classPrivateFieldGet(this, _$input, \"f\").value);\r\n                            if (isNaN(qtyValueCurrent)) {\r\n                                console.error(`Liquid Ajax Cart: \"${ELEMENT_TAG}\" element's input value isn't a number`, __classPrivateFieldGet(this, _$input, \"f\"), this);\r\n                                return;\r\n                            }\r\n                            let qtyValueNew = qtyValueCurrent;\r\n                            qtyValueNew = $button.hasAttribute(DATA_ATTR_QUANTITY_PLUS) ? qtyValueNew + 1 : qtyValueNew - 1;\r\n                            if (qtyValueNew < 1)\r\n                                qtyValueNew = 1;\r\n                            if (qtyValueNew !== qtyValueCurrent) {\r\n                                __classPrivateFieldGet(this, _$input, \"f\").value = qtyValueNew.toString();\r\n                                __classPrivateFieldGet(this, _instances, \"m\", _runAwaiting).call(this);\r\n                            }\r\n                        }\r\n                        event.preventDefault();\r\n                    });\r\n                    $button.addEventListener(\"focusout\", (event) => {\r\n                        if (event.relatedTarget && $button.contains(event.relatedTarget))\r\n                            return;\r\n                        if (__classPrivateFieldGet(this, _timer, \"f\") !== undefined) {\r\n                            __classPrivateFieldGet(this, _instances, \"m\", _runRequest).call(this);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        },\r\n        _timer = new WeakMap(),\r\n        _$input = new WeakMap(),\r\n        _instances = new WeakSet(),\r\n        _runAwaiting = function _runAwaiting() {\r\n            if (__classPrivateFieldGet(this, _timer, \"f\") !== undefined) {\r\n                clearTimeout(__classPrivateFieldGet(this, _timer, \"f\"));\r\n            }\r\n            __classPrivateFieldSet(this, _timer, setTimeout(() => {\r\n                __classPrivateFieldGet(this, _instances, \"m\", _runRequest).call(this);\r\n            }, AWAITING_TIME), \"f\");\r\n        },\r\n        _runRequest = function _runRequest() {\r\n            if (__classPrivateFieldGet(this, _timer, \"f\") !== undefined) {\r\n                clearTimeout(__classPrivateFieldGet(this, _timer, \"f\"));\r\n            }\r\n            __classPrivateFieldSet(this, _timer, undefined, \"f\");\r\n            if (!(0,_ajax_api__WEBPACK_IMPORTED_MODULE_2__.getProcessingStatus)()) {\r\n                __classPrivateFieldGet(this, _$input, \"f\").dispatchEvent(new Event('change', { bubbles: true }));\r\n            }\r\n        },\r\n        _a));\r\n}\r\n\r\n\n\n//# sourceURL=webpack://liquid-ajax-cart/./_src/controls/quantity-element.ts?");

/***/ }),

/***/ "./_src/controls/quantity-input.ts":
/*!*****************************************!*\
  !*** ./_src/controls/quantity-input.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DATA_ATTR_QUANTITY_INPUT\": () => (/* binding */ DATA_ATTR_QUANTITY_INPUT),\n/* harmony export */   \"cartQuantityInputInit\": () => (/* binding */ cartQuantityInputInit)\n/* harmony export */ });\n/* harmony import */ var _ajax_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ajax-api */ \"./_src/ajax-api.ts\");\n/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../state */ \"./_src/state.ts\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers */ \"./_src/helpers.ts\");\n/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../const */ \"./_src/const.ts\");\n\r\n\r\n\r\n\r\nconst DATA_ATTR_QUANTITY_INPUT = `${_const__WEBPACK_IMPORTED_MODULE_3__.DATA_ATTR_PREFIX}-quantity-input`;\r\nfunction initEventListeners() {\r\n    document.addEventListener('change', function (e) {\r\n        changeHandler(e.target, e);\r\n    }, false);\r\n    document.addEventListener(\"keydown\", function (e) {\r\n        if (e.key === \"Enter\") {\r\n            changeHandler(e.target, e);\r\n        }\r\n        if (e.key === \"Escape\") {\r\n            escHandler(e.target);\r\n        }\r\n    }, false);\r\n}\r\nfunction isValidElement(element) {\r\n    if (!(element.hasAttribute(DATA_ATTR_QUANTITY_INPUT))) {\r\n        return false;\r\n    }\r\n    if (!(element instanceof HTMLInputElement) || (element.type !== 'text' && element.type !== 'number')) {\r\n        console.error(`Liquid Ajax Cart: the ${DATA_ATTR_QUANTITY_INPUT} attribute supports \"input\" elements only with the \"text\" and the \"number\" types`);\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nfunction processingHandler() {\r\n    document.querySelectorAll(`input[${DATA_ATTR_QUANTITY_INPUT}]`).forEach((input) => {\r\n        if (!isValidElement(input)) {\r\n            return;\r\n        }\r\n        if ((0,_ajax_api__WEBPACK_IMPORTED_MODULE_0__.getProcessingStatus)()) {\r\n            input.disabled = true;\r\n            return;\r\n        }\r\n        const state = (0,_state__WEBPACK_IMPORTED_MODULE_1__.getCartState)();\r\n        const lineItemCode = input.getAttribute(DATA_ATTR_QUANTITY_INPUT).trim();\r\n        const [lineItem] = (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.findLineItemByCode)(lineItemCode, state);\r\n        if (lineItem) {\r\n            input.value = lineItem.quantity.toString();\r\n        }\r\n        else if (lineItem === null) {\r\n            input.value = \"0\";\r\n        }\r\n        input.disabled = false;\r\n    });\r\n}\r\nfunction changeHandler(element, e) {\r\n    if (!isValidElement(element)) {\r\n        return;\r\n    }\r\n    if (e) {\r\n        e.preventDefault(); // prevent form submission\r\n    }\r\n    if ((0,_ajax_api__WEBPACK_IMPORTED_MODULE_0__.getProcessingStatus)()) {\r\n        return;\r\n    }\r\n    let value = Number(element.value.trim());\r\n    const lineItem = element.getAttribute(DATA_ATTR_QUANTITY_INPUT).trim();\r\n    if (isNaN(value)) {\r\n        console.error(`Liquid Ajax Cart: input value of a ${DATA_ATTR_QUANTITY_INPUT} must be an Integer number`);\r\n        return;\r\n    }\r\n    if (value < 1) {\r\n        value = 0;\r\n    }\r\n    if (!lineItem) {\r\n        console.error(`Liquid Ajax Cart: attribute value of a ${DATA_ATTR_QUANTITY_INPUT} must be an item key or an item index`);\r\n        return;\r\n    }\r\n    const lineItemReqProperty = lineItem.length > 3 ? 'id' : 'line';\r\n    const formData = new FormData();\r\n    formData.set(lineItemReqProperty, lineItem);\r\n    formData.set('quantity', value.toString());\r\n    (0,_ajax_api__WEBPACK_IMPORTED_MODULE_0__.cartRequestChange)(formData, { info: { initiator: element } });\r\n    element.blur();\r\n}\r\nfunction escHandler(element) {\r\n    if (!isValidElement(element)) {\r\n        return;\r\n    }\r\n    const attributeValue = element.getAttribute(DATA_ATTR_QUANTITY_INPUT).trim();\r\n    let relatedLineItem;\r\n    const state = (0,_state__WEBPACK_IMPORTED_MODULE_1__.getCartState)();\r\n    if (attributeValue.length > 3) {\r\n        relatedLineItem = state.cart.items.find(lineItem => lineItem.key === attributeValue);\r\n    }\r\n    else {\r\n        const lineItemIndex = Number(attributeValue) - 1;\r\n        relatedLineItem = state.cart.items[lineItemIndex];\r\n    }\r\n    if (relatedLineItem) {\r\n        element.value = relatedLineItem.quantity.toString();\r\n    }\r\n    element.blur();\r\n}\r\nfunction cartQuantityInputInit() {\r\n    initEventListeners();\r\n    document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_0__.EVENT_QUEUE_START, processingHandler);\r\n    document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_0__.EVENT_REQUEST_END, processingHandler);\r\n    document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_0__.EVENT_QUEUE_END, processingHandler);\r\n    processingHandler();\r\n}\r\n\r\n\n\n//# sourceURL=webpack://liquid-ajax-cart/./_src/controls/quantity-input.ts?");

/***/ }),

/***/ "./_src/controls/request-button.ts":
/*!*****************************************!*\
  !*** ./_src/controls/request-button.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cartRequestButtonInit\": () => (/* binding */ cartRequestButtonInit)\n/* harmony export */ });\n/* harmony import */ var _ajax_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ajax-api */ \"./_src/ajax-api.ts\");\n/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../const */ \"./_src/const.ts\");\nvar _a, _b, _c, _d, _e, _f, _g, _h;\r\n\r\n\r\nconst CHANGE_URL = `${((_b = (_a = window.Shopify) === null || _a === void 0 ? void 0 : _a.routes) === null || _b === void 0 ? void 0 : _b.root) || '/'}cart/change`;\r\nconst ADD_URL = `${((_d = (_c = window.Shopify) === null || _c === void 0 ? void 0 : _c.routes) === null || _d === void 0 ? void 0 : _d.root) || '/'}cart/add`;\r\nconst CLEAR_URL = `${((_f = (_e = window.Shopify) === null || _e === void 0 ? void 0 : _e.routes) === null || _f === void 0 ? void 0 : _f.root) || '/'}cart/clear`;\r\nconst UPDATE_URL = `${((_h = (_g = window.Shopify) === null || _g === void 0 ? void 0 : _g.routes) === null || _h === void 0 ? void 0 : _h.root) || '/'}cart/update`;\r\nconst DATA_ATTR_REQUEST_BUTTON = `${_const__WEBPACK_IMPORTED_MODULE_1__.DATA_ATTR_PREFIX}-request-button`;\r\nfunction clickHandler(element, e) {\r\n    let url = undefined;\r\n    const validURLs = [CHANGE_URL, ADD_URL, CLEAR_URL, UPDATE_URL];\r\n    if (!(element.hasAttribute(DATA_ATTR_REQUEST_BUTTON))) {\r\n        return;\r\n    }\r\n    const attr = element.getAttribute(DATA_ATTR_REQUEST_BUTTON);\r\n    if (attr) {\r\n        let attrURL;\r\n        try {\r\n            attrURL = new URL(attr, window.location.origin);\r\n            if (validURLs.includes(attrURL.pathname)) {\r\n                url = attrURL;\r\n            }\r\n            else {\r\n                throw `URL should be one of the following: ${CHANGE_URL}, ${ADD_URL}, ${UPDATE_URL}, ${CLEAR_URL}`;\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(`Liquid Ajax Cart: ${DATA_ATTR_REQUEST_BUTTON} contains an invalid URL as a parameter.`, error);\r\n        }\r\n    }\r\n    else {\r\n        if (element instanceof HTMLAnchorElement && element.hasAttribute('href')) {\r\n            const linkURL = new URL(element.href);\r\n            if (validURLs.includes(linkURL.pathname)) {\r\n                url = linkURL;\r\n            }\r\n            else if (element.hasAttribute(DATA_ATTR_REQUEST_BUTTON)) {\r\n                console.error(`Liquid Ajax Cart: a link with the ${DATA_ATTR_REQUEST_BUTTON} contains an invalid href URL.`, `URL should be one of the following: ${CHANGE_URL}, ${ADD_URL}, ${UPDATE_URL}, ${CLEAR_URL}`);\r\n            }\r\n        }\r\n    }\r\n    if (url === undefined) {\r\n        console.error(`Liquid Ajax Cart: a ${DATA_ATTR_REQUEST_BUTTON} element doesn't have a valid URL`);\r\n        return;\r\n    }\r\n    if (e) {\r\n        e.preventDefault();\r\n    }\r\n    if ((0,_ajax_api__WEBPACK_IMPORTED_MODULE_0__.getProcessingStatus)()) {\r\n        return;\r\n    }\r\n    const formData = new FormData();\r\n    url.searchParams.forEach((value, key) => {\r\n        formData.append(key, value);\r\n    });\r\n    switch (url.pathname) {\r\n        case ADD_URL:\r\n            (0,_ajax_api__WEBPACK_IMPORTED_MODULE_0__.cartRequestAdd)(formData, { info: { initiator: element } });\r\n            break;\r\n        case CHANGE_URL:\r\n            (0,_ajax_api__WEBPACK_IMPORTED_MODULE_0__.cartRequestChange)(formData, { info: { initiator: element } });\r\n            break;\r\n        case UPDATE_URL:\r\n            (0,_ajax_api__WEBPACK_IMPORTED_MODULE_0__.cartRequestUpdate)(formData, { info: { initiator: element } });\r\n            break;\r\n        case CLEAR_URL:\r\n            (0,_ajax_api__WEBPACK_IMPORTED_MODULE_0__.cartRequestClear)({}, { info: { initiator: element } });\r\n            break;\r\n    }\r\n}\r\nfunction cartRequestButtonInit() {\r\n    document.addEventListener('click', function (e) {\r\n        for (let target = e.target; target && target != document.documentElement; target = target.parentElement) {\r\n            clickHandler(target, e);\r\n        }\r\n    }, false);\r\n}\r\n\r\n\n\n//# sourceURL=webpack://liquid-ajax-cart/./_src/controls/request-button.ts?");

/***/ }),

/***/ "./_src/dom-binder.ts":
/*!****************************!*\
  !*** ./_src/dom-binder.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cartDomBinderInit\": () => (/* binding */ cartDomBinderInit),\n/* harmony export */   \"cartDomBinderRerender\": () => (/* binding */ cartDomBinderRerender)\n/* harmony export */ });\n/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./state */ \"./_src/state.ts\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./settings */ \"./_src/settings.ts\");\n/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./const */ \"./_src/const.ts\");\n/* harmony import */ var _ajax_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ajax-api */ \"./_src/ajax-api.ts\");\n\r\n\r\n\r\n\r\nconst DATA_ATTR_BIND_STATE = `${_const__WEBPACK_IMPORTED_MODULE_2__.DATA_ATTR_PREFIX}-bind`;\r\nfunction updateDOM() {\r\n    const state = (0,_state__WEBPACK_IMPORTED_MODULE_0__.getCartState)();\r\n    if (state.cart) {\r\n        document.querySelectorAll(`[${DATA_ATTR_BIND_STATE}]`).forEach((element) => {\r\n            const path = element.getAttribute(DATA_ATTR_BIND_STATE);\r\n            element.textContent = computeValue(path);\r\n        });\r\n    }\r\n}\r\nfunction computeValue(str) {\r\n    const { binderFormatters } = _settings__WEBPACK_IMPORTED_MODULE_1__.settings;\r\n    const [path, ...filters] = str.split('|');\r\n    const state = (0,_state__WEBPACK_IMPORTED_MODULE_0__.getCartState)().cart;\r\n    let value = getStateValueByString(path, state);\r\n    filters.forEach(element => {\r\n        const formatterName = element.trim();\r\n        if (formatterName !== '') {\r\n            if (typeof binderFormatters === 'object' && formatterName in binderFormatters) {\r\n                value = binderFormatters[formatterName](value);\r\n            }\r\n            else if (formatterName in defaultFormatters) {\r\n                value = defaultFormatters[formatterName](value);\r\n            }\r\n            else {\r\n                console.warn(`Liquid Ajax Cart: the \"${formatterName}\" formatter is not found`);\r\n            }\r\n        }\r\n    });\r\n    if (typeof value === 'string' || value instanceof String || typeof value === 'number' || value instanceof Number) {\r\n        return value.toString();\r\n    }\r\n    console.error(`Liquid Ajax Cart: the calculated value for the ${DATA_ATTR_BIND_STATE}=\"${str}\" element must be string or number. But the value is`, value);\r\n    return '';\r\n}\r\nfunction getStateValueByString(str, obj) {\r\n    const properties = str.split('.');\r\n    const currentProperty = properties.shift().trim();\r\n    if (currentProperty !== '' && currentProperty in obj && properties.length > 0) {\r\n        return getStateValueByString(properties.join('.'), obj[currentProperty]);\r\n    }\r\n    return obj[currentProperty];\r\n}\r\nconst defaultFormatters = {\r\n    'money_with_currency': (value) => {\r\n        var _a;\r\n        const state = (0,_state__WEBPACK_IMPORTED_MODULE_0__.getCartState)();\r\n        if (typeof value !== 'number' && !(value instanceof Number)) {\r\n            console.error(`Liquid Ajax Cart: the 'money_with_currency' formatter is not applied because the value is not a number. The value is `, value);\r\n            return value;\r\n        }\r\n        const moneyValue = value / 100;\r\n        if ('Intl' in window && ((_a = window.Shopify) === null || _a === void 0 ? void 0 : _a.locale)) {\r\n            return Intl.NumberFormat(window.Shopify.locale, {\r\n                style: 'currency',\r\n                currency: state.cart.currency\r\n            }).format(moneyValue);\r\n        }\r\n        return `${moneyValue.toFixed(2)} ${state.cart.currency}`;\r\n    }\r\n};\r\nfunction cartDomBinderRerender() {\r\n    updateDOM();\r\n}\r\nfunction cartDomBinderInit() {\r\n    document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_3__.EVENT_REQUEST_END, updateDOM);\r\n    updateDOM();\r\n}\r\n\r\n\n\n//# sourceURL=webpack://liquid-ajax-cart/./_src/dom-binder.ts?");

/***/ }),

/***/ "./_src/global-classes.ts":
/*!********************************!*\
  !*** ./_src/global-classes.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cartGlobalClassesInit\": () => (/* binding */ cartGlobalClassesInit)\n/* harmony export */ });\n/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./state */ \"./_src/state.ts\");\n/* harmony import */ var _ajax_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ajax-api */ \"./_src/ajax-api.ts\");\n/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./const */ \"./_src/const.ts\");\n\r\n\r\n\r\nconst CSS_CLASS_INIT = `${_const__WEBPACK_IMPORTED_MODULE_2__.CSS_CLASS_PREFIX}-init`;\r\nconst CSS_CLASS_IN_PROGRESS = `${_const__WEBPACK_IMPORTED_MODULE_2__.CSS_CLASS_PREFIX}-processing`;\r\nconst CSS_CLASS_EMPTY = `${_const__WEBPACK_IMPORTED_MODULE_2__.CSS_CLASS_PREFIX}-empty`;\r\nconst CSS_CLASS_NOT_EMPTY = `${_const__WEBPACK_IMPORTED_MODULE_2__.CSS_CLASS_PREFIX}-not-empty`;\r\nfunction updateClasses() {\r\n    const $element = document.querySelector('html');\r\n    const state = (0,_state__WEBPACK_IMPORTED_MODULE_0__.getCartState)();\r\n    $element.classList.toggle(CSS_CLASS_INIT, state.cart !== null);\r\n    $element.classList.toggle(CSS_CLASS_IN_PROGRESS, (0,_ajax_api__WEBPACK_IMPORTED_MODULE_1__.getProcessingStatus)());\r\n    $element.classList.toggle(CSS_CLASS_EMPTY, state.cart.item_count === 0);\r\n    $element.classList.toggle(CSS_CLASS_NOT_EMPTY, state.cart.item_count > 0);\r\n}\r\nconst cartGlobalClassesInit = () => {\r\n    document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_1__.EVENT_QUEUE_START, updateClasses);\r\n    document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_1__.EVENT_REQUEST_END, updateClasses);\r\n    document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_1__.EVENT_QUEUE_END, updateClasses);\r\n    updateClasses();\r\n};\r\n\r\n\n\n//# sourceURL=webpack://liquid-ajax-cart/./_src/global-classes.ts?");

/***/ }),

/***/ "./_src/helpers.ts":
/*!*************************!*\
  !*** ./_src/helpers.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"findLineItemByCode\": () => (/* binding */ findLineItemByCode)\n/* harmony export */ });\nfunction findLineItemByCode(code, state) {\r\n    let lineItem;\r\n    let codeType;\r\n    if (code.length > 3) {\r\n        lineItem = state.cart.items.find((lineItem) => lineItem.key === code);\r\n        codeType = 'id';\r\n    }\r\n    else {\r\n        lineItem = state.cart.items[Number(code) - 1];\r\n        codeType = 'line';\r\n    }\r\n    if (lineItem === undefined) {\r\n        lineItem = null;\r\n        console.error(`Liquid Ajax Cart: line item with ${codeType}=\"${code}\" not found`);\r\n    }\r\n    return [lineItem, codeType];\r\n}\r\n\n\n//# sourceURL=webpack://liquid-ajax-cart/./_src/helpers.ts?");

/***/ }),

/***/ "./_src/index.ts":
/*!***********************!*\
  !*** ./_src/index.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./settings */ \"./_src/settings.ts\");\n/* harmony import */ var _ajax_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ajax-api */ \"./_src/ajax-api.ts\");\n/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./state */ \"./_src/state.ts\");\n/* harmony import */ var _dom_binder__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dom-binder */ \"./_src/dom-binder.ts\");\n/* harmony import */ var _sections__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sections */ \"./_src/sections.ts\");\n/* harmony import */ var _controls__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./controls */ \"./_src/controls.ts\");\n/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./messages */ \"./_src/messages.ts\");\n/* harmony import */ var _global_classes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./global-classes */ \"./_src/global-classes.ts\");\n/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./const */ \"./_src/const.ts\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet isInit = false;\r\nif (!('liquidAjaxCart' in window)) {\r\n    window.liquidAjaxCart = {\r\n        conf: _settings__WEBPACK_IMPORTED_MODULE_0__.configureCart,\r\n    };\r\n    function addReadOnlyProp(key, fn) {\r\n        Object.defineProperty(window.liquidAjaxCart, key, {\r\n            get: fn,\r\n            set: () => {\r\n                throw new Error(`Liquid Ajax Cart: the \"${key}\" is a read-only property`);\r\n            },\r\n            enumerable: true\r\n        });\r\n    }\r\n    addReadOnlyProp('init', () => isInit);\r\n    (0,_sections__WEBPACK_IMPORTED_MODULE_4__.cartSectionsInit)();\r\n    (0,_messages__WEBPACK_IMPORTED_MODULE_6__.cartMessagesInit)();\r\n    (0,_state__WEBPACK_IMPORTED_MODULE_2__.cartStateInit)().then(() => {\r\n        (0,_dom_binder__WEBPACK_IMPORTED_MODULE_3__.cartDomBinderInit)();\r\n        (0,_controls__WEBPACK_IMPORTED_MODULE_5__.cartControlsInit)();\r\n        (0,_global_classes__WEBPACK_IMPORTED_MODULE_7__.cartGlobalClassesInit)();\r\n        window.liquidAjaxCart.get = _ajax_api__WEBPACK_IMPORTED_MODULE_1__.cartRequestGet;\r\n        window.liquidAjaxCart.add = _ajax_api__WEBPACK_IMPORTED_MODULE_1__.cartRequestAdd;\r\n        window.liquidAjaxCart.change = _ajax_api__WEBPACK_IMPORTED_MODULE_1__.cartRequestChange;\r\n        window.liquidAjaxCart.update = _ajax_api__WEBPACK_IMPORTED_MODULE_1__.cartRequestUpdate;\r\n        window.liquidAjaxCart.clear = _ajax_api__WEBPACK_IMPORTED_MODULE_1__.cartRequestClear;\r\n        addReadOnlyProp('cart', () => (0,_state__WEBPACK_IMPORTED_MODULE_2__.getCartState)().cart);\r\n        addReadOnlyProp('processing', _ajax_api__WEBPACK_IMPORTED_MODULE_1__.getProcessingStatus);\r\n        window.addEventListener('focus', () => {\r\n            if (_settings__WEBPACK_IMPORTED_MODULE_0__.settings.updateOnWindowFocus) {\r\n                (0,_ajax_api__WEBPACK_IMPORTED_MODULE_1__.cartRequestUpdate)({}, {});\r\n            }\r\n        });\r\n        isInit = true;\r\n        const event = new CustomEvent(`${_const__WEBPACK_IMPORTED_MODULE_8__.EVENT_PREFIX}:init`);\r\n        document.dispatchEvent(event);\r\n    });\r\n}\r\n\n\n//# sourceURL=webpack://liquid-ajax-cart/./_src/index.ts?");

/***/ }),

/***/ "./_src/messages.ts":
/*!**************************!*\
  !*** ./_src/messages.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cartMessagesInit\": () => (/* binding */ cartMessagesInit)\n/* harmony export */ });\n/* harmony import */ var _ajax_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ajax-api */ \"./_src/ajax-api.ts\");\n/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./state */ \"./_src/state.ts\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./settings */ \"./_src/settings.ts\");\n/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./const */ \"./_src/const.ts\");\n/* harmony import */ var _controls_product_form_element__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./controls/product-form-element */ \"./_src/controls/product-form-element.ts\");\n\r\n\r\n\r\n\r\n\r\nconst DATA_ATTR_ERRORS = `${_const__WEBPACK_IMPORTED_MODULE_3__.DATA_ATTR_PREFIX}-errors`;\r\nfunction getRequestError(requestState) {\r\n    var _a, _b, _c, _d, _e;\r\n    const { requestErrorText } = _settings__WEBPACK_IMPORTED_MODULE_2__.settings;\r\n    if ((_a = requestState.responseData) === null || _a === void 0 ? void 0 : _a.ok)\r\n        return '';\r\n    return ((_c = (_b = requestState.responseData) === null || _b === void 0 ? void 0 : _b.body) === null || _c === void 0 ? void 0 : _c.description)\r\n        || ((_e = (_d = requestState.responseData) === null || _d === void 0 ? void 0 : _d.body) === null || _e === void 0 ? void 0 : _e.message)\r\n        || requestErrorText;\r\n}\r\nconst changeRequestContainers = (requestState) => {\r\n    var _a;\r\n    let errorContainers;\r\n    // const {messagesAttribute} = settings.computed;\r\n    const state = (0,_state__WEBPACK_IMPORTED_MODULE_1__.getCartState)();\r\n    let requestedId, requestedLine;\r\n    if (requestState.requestBody instanceof FormData || requestState.requestBody instanceof URLSearchParams) {\r\n        if (requestState.requestBody.has('line')) {\r\n            requestedLine = requestState.requestBody.get('line').toString();\r\n        }\r\n        if (requestState.requestBody.has('id')) {\r\n            requestedId = requestState.requestBody.get('id').toString();\r\n        }\r\n    }\r\n    else {\r\n        if ('line' in requestState.requestBody) {\r\n            requestedLine = String(requestState.requestBody.line);\r\n        }\r\n        if ('id' in requestState.requestBody) {\r\n            requestedId = String(requestState.requestBody.id);\r\n        }\r\n    }\r\n    if (requestedLine) {\r\n        const requestedLineNumber = Number(requestedLine);\r\n        if (requestedLineNumber > 0) {\r\n            const lineItemIndex = requestedLineNumber - 1;\r\n            requestedId = (_a = state.cart.items[lineItemIndex]) === null || _a === void 0 ? void 0 : _a.key;\r\n        }\r\n    }\r\n    if (requestedId) {\r\n        if (requestedId.indexOf(':') > -1) {\r\n            errorContainers = document.querySelectorAll(`[${DATA_ATTR_ERRORS}=\"${requestedId}\"]`);\r\n        }\r\n        else {\r\n            errorContainers = document.querySelectorAll(state.cart.items.reduce((acc, element) => {\r\n                if (element.key === requestedId || element.id === Number(requestedId)) {\r\n                    acc.push(`[${DATA_ATTR_ERRORS}=\"${element.key}\"]`);\r\n                }\r\n                return acc;\r\n            }, []).join(','));\r\n        }\r\n    }\r\n    return errorContainers;\r\n};\r\nconst addRequestContainers = (requestState) => {\r\n    var _a;\r\n    let errorContainers;\r\n    const initiator = (_a = requestState.info) === null || _a === void 0 ? void 0 : _a.initiator;\r\n    if (initiator instanceof _controls_product_form_element__WEBPACK_IMPORTED_MODULE_4__.HTMLProductFormElement) {\r\n        errorContainers = initiator.querySelectorAll(`[${DATA_ATTR_ERRORS}=\"form\"]`);\r\n    }\r\n    return errorContainers;\r\n};\r\nconst cartMessagesInit = () => {\r\n    let errorContainers;\r\n    document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_0__.EVENT_REQUEST_START, (event) => {\r\n        const { requestState } = event.detail;\r\n        errorContainers = undefined;\r\n        if (requestState.requestType === _ajax_api__WEBPACK_IMPORTED_MODULE_0__.REQUEST_ADD)\r\n            errorContainers = addRequestContainers(requestState);\r\n        else if (requestState.requestType === _ajax_api__WEBPACK_IMPORTED_MODULE_0__.REQUEST_CHANGE)\r\n            errorContainers = changeRequestContainers(requestState);\r\n        if (errorContainers && errorContainers.length > 0) {\r\n            errorContainers.forEach((element) => {\r\n                element.textContent = '';\r\n            });\r\n        }\r\n    });\r\n    document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_0__.EVENT_REQUEST_END, (event) => {\r\n        const { requestState } = event.detail;\r\n        if (requestState.info.cancel)\r\n            return;\r\n        if (!errorContainers || errorContainers.length === 0)\r\n            return;\r\n        const errorMessage = getRequestError(requestState);\r\n        if (!errorMessage)\r\n            return;\r\n        errorContainers.forEach((element) => {\r\n            element.textContent = errorMessage;\r\n        });\r\n    });\r\n};\r\n\r\n\n\n//# sourceURL=webpack://liquid-ajax-cart/./_src/messages.ts?");

/***/ }),

/***/ "./_src/sections.ts":
/*!**************************!*\
  !*** ./_src/sections.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cartSectionsInit\": () => (/* binding */ cartSectionsInit)\n/* harmony export */ });\n/* harmony import */ var _ajax_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ajax-api */ \"./_src/ajax-api.ts\");\n/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./const */ \"./_src/const.ts\");\n\r\n\r\nconst DATA_ATTR_SECTION = `${_const__WEBPACK_IMPORTED_MODULE_1__.DATA_ATTR_PREFIX}-section`;\r\nconst DATA_ATTR_STATIC_ELEMENT = `${_const__WEBPACK_IMPORTED_MODULE_1__.DATA_ATTR_PREFIX}-static-element`;\r\nconst DATA_ATTR_SCROLL_AREA = `${_const__WEBPACK_IMPORTED_MODULE_1__.DATA_ATTR_PREFIX}-section-scroll`;\r\nconst SHOPIFY_SECTION_PREFIX = 'shopify-section-';\r\nfunction cartSectionsInit() {\r\n    document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_0__.EVENT_REQUEST_START, (event) => {\r\n        const { requestState } = event.detail;\r\n        if (requestState.requestBody !== undefined) {\r\n            const sectionNames = [];\r\n            document.querySelectorAll(`[${DATA_ATTR_SECTION}]`).forEach(sectionNodeChild => {\r\n                const sectionNode = sectionNodeChild.closest(`[id^=\"${SHOPIFY_SECTION_PREFIX}\"]`);\r\n                if (sectionNode) {\r\n                    const sectionId = sectionNode.id.replace(SHOPIFY_SECTION_PREFIX, '');\r\n                    if (sectionNames.indexOf(sectionId) === -1) {\r\n                        sectionNames.push(sectionId);\r\n                    }\r\n                }\r\n                else {\r\n                    console.error(`Liquid Ajax Cart: there is a ${DATA_ATTR_SECTION} element that is not inside a Shopify section. All the ${DATA_ATTR_SECTION} elements must be inside Shopify sections.`);\r\n                }\r\n            });\r\n            if (sectionNames.length) {\r\n                let requestingSections = sectionNames.join(',');\r\n                let sectionsParam = undefined;\r\n                if (requestState.requestBody instanceof FormData || requestState.requestBody instanceof URLSearchParams) {\r\n                    if (requestState.requestBody.has('sections')) {\r\n                        sectionsParam = requestState.requestBody.get('sections').toString();\r\n                    }\r\n                }\r\n                else {\r\n                    sectionsParam = requestState.requestBody.sections;\r\n                }\r\n                if (((typeof sectionsParam === 'string' || sectionsParam instanceof String) &&\r\n                    sectionsParam !== '') ||\r\n                    (sectionsParam && Array.isArray(sectionsParam) && sectionsParam.length > 0)) {\r\n                    requestingSections = `${sectionsParam.toString()},${requestingSections}`;\r\n                }\r\n                if (requestState.requestBody instanceof FormData || requestState.requestBody instanceof URLSearchParams) {\r\n                    requestState.requestBody.set('sections', requestingSections);\r\n                }\r\n                else {\r\n                    requestState.requestBody.sections = requestingSections;\r\n                }\r\n            }\r\n        }\r\n    });\r\n    document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_0__.EVENT_REQUEST_END, (event) => {\r\n        var _a, _b, _c;\r\n        event.detail.sections = [];\r\n        const { requestState } = event.detail;\r\n        const parser = new DOMParser();\r\n        const updatedSections = []; // for sections event\r\n        if (((_a = requestState.responseData) === null || _a === void 0 ? void 0 : _a.ok) && 'sections' in requestState.responseData.body) {\r\n            let sections = requestState.responseData.body.sections;\r\n            if ((_c = (_b = requestState.extraResponseData) === null || _b === void 0 ? void 0 : _b.body) === null || _c === void 0 ? void 0 : _c.sections) {\r\n                sections = Object.assign(Object.assign({}, sections), requestState.extraResponseData.body.sections);\r\n            }\r\n            for (let sectionId in sections) {\r\n                if (!sections[sectionId]) {\r\n                    console.error(`Liquid Ajax Cart: the HTML for the \"${sectionId}\" section was requested but the response is ${sections[sectionId]}`);\r\n                    continue;\r\n                }\r\n                document.querySelectorAll(`#shopify-section-${sectionId}`).forEach(sectionNode => {\r\n                    let newNodes = []; // for sections event\r\n                    const noId = \"__noId__\"; // for memorizing scroll positions and static elements\r\n                    // Memorize scroll positions\r\n                    const scrollAreasList = {};\r\n                    sectionNode.querySelectorAll(` [${DATA_ATTR_SCROLL_AREA}] `).forEach(scrollAreaNode => {\r\n                        let scrollId = scrollAreaNode.getAttribute(DATA_ATTR_SCROLL_AREA).toString().trim();\r\n                        if (scrollId === '') {\r\n                            scrollId = noId;\r\n                        }\r\n                        if (!(scrollId in scrollAreasList)) {\r\n                            scrollAreasList[scrollId] = [];\r\n                        }\r\n                        scrollAreasList[scrollId].push({\r\n                            scroll: scrollAreaNode.scrollTop,\r\n                            height: scrollAreaNode.scrollHeight\r\n                        });\r\n                    });\r\n                    // Memorize static elements\r\n                    const staticElementsList = {};\r\n                    const staticElements = sectionNode.querySelectorAll(`[${DATA_ATTR_STATIC_ELEMENT}]`);\r\n                    if (staticElements) {\r\n                        staticElements.forEach(staticElement => {\r\n                            let staticElementId = staticElement.getAttribute(DATA_ATTR_STATIC_ELEMENT).toString().trim();\r\n                            if (staticElementId === '') {\r\n                                staticElementId = noId;\r\n                            }\r\n                            if (!(staticElementId in staticElementsList)) {\r\n                                staticElementsList[staticElementId] = [];\r\n                            }\r\n                            staticElementsList[staticElementId].push(staticElement);\r\n                        });\r\n                    }\r\n                    // Replace HTML and Restore static elements\r\n                    const sectionParts = sectionNode.querySelectorAll(`[${DATA_ATTR_SECTION}]`);\r\n                    if (sectionParts) {\r\n                        const receivedDOM = parser.parseFromString(sections[sectionId], \"text/html\");\r\n                        // Restore static elements\r\n                        for (let staticElementId in staticElementsList) {\r\n                            receivedDOM.querySelectorAll(` [${DATA_ATTR_STATIC_ELEMENT}=\"${staticElementId.replace(noId, '')}\"] `).forEach((staticElement, staticElementIndex) => {\r\n                                if (staticElementIndex + 1 <= staticElementsList[staticElementId].length) {\r\n                                    staticElement.before(staticElementsList[staticElementId][staticElementIndex]);\r\n                                    staticElement.parentElement.removeChild(staticElement);\r\n                                }\r\n                            });\r\n                        }\r\n                        // Replace old sections with new sections\r\n                        const receivedParts = receivedDOM.querySelectorAll(`[${DATA_ATTR_SECTION}]`);\r\n                        if (sectionParts.length !== receivedParts.length) {\r\n                            console.error(`Liquid Ajax Cart: the received HTML for the \"${sectionId}\" section has a different quantity of the \"${DATA_ATTR_SECTION}\" containers. The section will be updated completely.`);\r\n                            const receivedSection = receivedDOM.querySelector(`#${SHOPIFY_SECTION_PREFIX}${sectionId}`);\r\n                            if (receivedSection) {\r\n                                sectionNode.innerHTML = \"\";\r\n                                while (receivedSection.childNodes.length) {\r\n                                    sectionNode.appendChild(receivedSection.firstChild);\r\n                                }\r\n                                newNodes.push(sectionNode);\r\n                            }\r\n                        }\r\n                        else {\r\n                            sectionParts.forEach((sectionPartsItem, sectionPartsItemIndex) => {\r\n                                sectionPartsItem.before(receivedParts[sectionPartsItemIndex]);\r\n                                sectionPartsItem.parentElement.removeChild(sectionPartsItem);\r\n                                newNodes.push(receivedParts[sectionPartsItemIndex]);\r\n                            });\r\n                        }\r\n                    }\r\n                    // Restore scroll positions\r\n                    for (let scrollId in scrollAreasList) {\r\n                        sectionNode.querySelectorAll(` [${DATA_ATTR_SCROLL_AREA}=\"${scrollId.replace(noId, '')}\"] `).forEach((scrollAreaNode, scrollAreaIndex) => {\r\n                            if (scrollAreaIndex + 1 <= scrollAreasList[scrollId].length) {\r\n                                if (requestState.requestType !== _ajax_api__WEBPACK_IMPORTED_MODULE_0__.REQUEST_ADD || scrollAreasList[scrollId][scrollAreaIndex]['height'] >= scrollAreaNode.scrollHeight) {\r\n                                    scrollAreaNode.scrollTop = scrollAreasList[scrollId][scrollAreaIndex]['scroll'];\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    if (newNodes.length > 0) {\r\n                        updatedSections.push({\r\n                            id: sectionId,\r\n                            elements: newNodes\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        if (updatedSections.length > 0) {\r\n            event.detail.sections = updatedSections;\r\n        }\r\n    });\r\n}\r\n\r\n\n\n//# sourceURL=webpack://liquid-ajax-cart/./_src/sections.ts?");

/***/ }),

/***/ "./_src/settings.ts":
/*!**************************!*\
  !*** ./_src/settings.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"configureCart\": () => (/* binding */ configureCart),\n/* harmony export */   \"settings\": () => (/* binding */ settings)\n/* harmony export */ });\n/* harmony import */ var _dom_binder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom-binder */ \"./_src/dom-binder.ts\");\n\r\nconst settings = {\r\n    binderFormatters: {},\r\n    requestErrorText: 'There was an error while updating your cart. Please try again.',\r\n    updateOnWindowFocus: true\r\n};\r\nfunction configureCart(property, value) {\r\n    if (property in settings && property !== 'computed') {\r\n        settings[property] = value;\r\n        if (property === 'binderFormatters') {\r\n            (0,_dom_binder__WEBPACK_IMPORTED_MODULE_0__.cartDomBinderRerender)();\r\n        }\r\n    }\r\n    else {\r\n        console.error(`Liquid Ajax Cart: unknown configuration parameter \"${property}\"`);\r\n    }\r\n}\r\n\r\n\n\n//# sourceURL=webpack://liquid-ajax-cart/./_src/settings.ts?");

/***/ }),

/***/ "./_src/state.ts":
/*!***********************!*\
  !*** ./_src/state.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cartStateInit\": () => (/* binding */ cartStateInit),\n/* harmony export */   \"getCartState\": () => (/* binding */ getCartState)\n/* harmony export */ });\n/* harmony import */ var _ajax_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ajax-api */ \"./_src/ajax-api.ts\");\n/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./const */ \"./_src/const.ts\");\n\r\n\r\nconst DATA_ATTR_INITIAL_STATE = `${_const__WEBPACK_IMPORTED_MODULE_1__.DATA_ATTR_PREFIX}-initial-state`;\r\nlet cart = null;\r\nlet previousCart = undefined;\r\nfunction cartStateInit() {\r\n    document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_0__.EVENT_REQUEST_END, (event) => {\r\n        var _a, _b;\r\n        const { requestState } = event.detail;\r\n        let newCart;\r\n        if (((_a = requestState.extraResponseData) === null || _a === void 0 ? void 0 : _a.ok) && requestState.extraResponseData.body.token) {\r\n            newCart = requestState.extraResponseData.body;\r\n        }\r\n        else if (((_b = requestState.responseData) === null || _b === void 0 ? void 0 : _b.ok) && requestState.responseData.body.token) {\r\n            newCart = requestState.responseData.body;\r\n        }\r\n        if (newCart) {\r\n            previousCart = cart;\r\n            cart = newCart;\r\n            event.detail.previousCart = previousCart;\r\n            event.detail.cart = cart;\r\n        }\r\n    });\r\n    const initialStateContainer = document.querySelector(`[${DATA_ATTR_INITIAL_STATE}]`);\r\n    if (initialStateContainer) {\r\n        try {\r\n            cart = JSON.parse(initialStateContainer.textContent);\r\n        }\r\n        catch (e) {\r\n            console.error(`Liquid Ajax Cart: can't parse cart JSON from the \"${DATA_ATTR_INITIAL_STATE}\" script`);\r\n            console.error(e);\r\n        }\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n        var _a, _b;\r\n        if (cart) {\r\n            resolve();\r\n            return;\r\n        }\r\n        fetch(`${((_b = (_a = window.Shopify) === null || _a === void 0 ? void 0 : _a.routes) === null || _b === void 0 ? void 0 : _b.root) || '/'}cart.js`, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(response => {\r\n            return response.json();\r\n        }).then(data => {\r\n            cart = data;\r\n            resolve();\r\n        }).catch(error => {\r\n            console.error(error);\r\n            reject('Can\\'t load the cart state from the \"/cart.js\" endpoint');\r\n        });\r\n    });\r\n}\r\nfunction getCartState() {\r\n    return {\r\n        cart,\r\n        previousCart\r\n    };\r\n}\r\n\r\n\n\n//# sourceURL=webpack://liquid-ajax-cart/./_src/state.ts?");

/***/ })

/******/ });
/************************************************************************/
/******/ // The module cache
/******/ var __webpack_module_cache__ = {};
/******/ 
/******/ // The require function
/******/ function __webpack_require__(moduleId) {
/******/ 	// Check if module is in cache
/******/ 	var cachedModule = __webpack_module_cache__[moduleId];
/******/ 	if (cachedModule !== undefined) {
/******/ 		return cachedModule.exports;
/******/ 	}
/******/ 	// Create a new module (and put it into the cache)
/******/ 	var module = __webpack_module_cache__[moduleId] = {
/******/ 		// no module.id needed
/******/ 		// no module.loaded needed
/******/ 		exports: {}
/******/ 	};
/******/ 
/******/ 	// Execute the module function
/******/ 	__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 
/******/ 	// Return the exports of the module
/******/ 	return module.exports;
/******/ }
/******/ 
/************************************************************************/
/******/ /* webpack/runtime/define property getters */
/******/ (() => {
/******/ 	// define getter functions for harmony exports
/******/ 	__webpack_require__.d = (exports, definition) => {
/******/ 		for(var key in definition) {
/******/ 			if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 				Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 			}
/******/ 		}
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/hasOwnProperty shorthand */
/******/ (() => {
/******/ 	__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ })();
/******/ 
/******/ /* webpack/runtime/make namespace object */
/******/ (() => {
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = (exports) => {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/ })();
/******/ 
/************************************************************************/
/******/ 
/******/ // startup
/******/ // Load entry module and return exports
/******/ // This entry module can't be inlined because the eval devtool is used.
/******/ var __webpack_exports__ = __webpack_require__("./_src/index.ts");
/******/ 
