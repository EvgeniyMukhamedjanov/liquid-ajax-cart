/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ var __webpack_modules__ = ({

/***/ "./_src/ajax-api.ts":
/*!**************************!*\
  !*** ./_src/ajax-api.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EVENT_QUEUE_EMPTY_INTERNAL: () => (/* binding */ EVENT_QUEUE_EMPTY_INTERNAL),\n/* harmony export */   EVENT_QUEUE_END_INTERNAL: () => (/* binding */ EVENT_QUEUE_END_INTERNAL),\n/* harmony export */   EVENT_QUEUE_START_INTERNAL: () => (/* binding */ EVENT_QUEUE_START_INTERNAL),\n/* harmony export */   EVENT_REQUEST_END_INTERNAL: () => (/* binding */ EVENT_REQUEST_END_INTERNAL),\n/* harmony export */   EVENT_REQUEST_START_INTERNAL: () => (/* binding */ EVENT_REQUEST_START_INTERNAL),\n/* harmony export */   REQUEST_ADD: () => (/* binding */ REQUEST_ADD),\n/* harmony export */   REQUEST_CHANGE: () => (/* binding */ REQUEST_CHANGE),\n/* harmony export */   REQUEST_CLEAR: () => (/* binding */ REQUEST_CLEAR),\n/* harmony export */   REQUEST_GET: () => (/* binding */ REQUEST_GET),\n/* harmony export */   REQUEST_UPDATE: () => (/* binding */ REQUEST_UPDATE),\n/* harmony export */   addToQueues: () => (/* binding */ addToQueues),\n/* harmony export */   cartRequestAdd: () => (/* binding */ cartRequestAdd),\n/* harmony export */   cartRequestChange: () => (/* binding */ cartRequestChange),\n/* harmony export */   cartRequestClear: () => (/* binding */ cartRequestClear),\n/* harmony export */   cartRequestGet: () => (/* binding */ cartRequestGet),\n/* harmony export */   cartRequestUpdate: () => (/* binding */ cartRequestUpdate),\n/* harmony export */   getProcessingStatus: () => (/* binding */ getProcessingStatus)\n/* harmony export */ });\n/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./const */ \"./_src/const.ts\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./settings */ \"./_src/settings.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\nconst REQUEST_ADD = 'add';\nconst REQUEST_CHANGE = 'change';\nconst REQUEST_UPDATE = 'update';\nconst REQUEST_CLEAR = 'clear';\nconst REQUEST_GET = 'get';\nconst EVENT_QUEUE_START = `${_const__WEBPACK_IMPORTED_MODULE_0__.EVENT_PREFIX}:queue-start`;\nconst EVENT_QUEUE_START_INTERNAL = `${_const__WEBPACK_IMPORTED_MODULE_0__.EVENT_PREFIX}:queue-start-internal`;\nconst EVENT_QUEUE_EMPTY_INTERNAL = `${_const__WEBPACK_IMPORTED_MODULE_0__.EVENT_PREFIX}:queue-empty-internal`;\nconst EVENT_QUEUE_END_INTERNAL = `${_const__WEBPACK_IMPORTED_MODULE_0__.EVENT_PREFIX}:queue-end-internal`;\nconst EVENT_QUEUE_END = `${_const__WEBPACK_IMPORTED_MODULE_0__.EVENT_PREFIX}:queue-end`;\nconst EVENT_REQUEST_START_INTERNAL = `${_const__WEBPACK_IMPORTED_MODULE_0__.EVENT_PREFIX}:request-start-internal`;\nconst EVENT_REQUEST_START = `${_const__WEBPACK_IMPORTED_MODULE_0__.EVENT_PREFIX}:request-start`;\nconst EVENT_REQUEST_END_INTERNAL = `${_const__WEBPACK_IMPORTED_MODULE_0__.EVENT_PREFIX}:request-end-internal`;\nconst EVENT_REQUEST_END = `${_const__WEBPACK_IMPORTED_MODULE_0__.EVENT_PREFIX}:request-end`;\nconst queues = [];\nlet processing = false;\nfunction addToQueues(queueItem) {\n    var _a;\n    if (!((_a = queueItem.options) === null || _a === void 0 ? void 0 : _a.important) || queues.length === 0) {\n        const newLength = queues.push([queueItem]);\n        if (newLength === 1) {\n            setProcessingStatus(true);\n            runQueues();\n        }\n        return;\n    }\n    queues[0].push(queueItem);\n    return;\n}\nfunction runQueues() {\n    if (queues.length === 1 && queues[0].length === 0) {\n        const eventInternal = new CustomEvent(EVENT_QUEUE_EMPTY_INTERNAL);\n        document.dispatchEvent(eventInternal);\n    }\n    if (queues.length === 0) {\n        setProcessingStatus(false);\n        return;\n    }\n    if (queues[0].length === 0) {\n        queues.shift();\n        runQueues();\n        return;\n    }\n    const { requestType, body, options } = queues[0][0];\n    cartRequest(requestType, body, options, () => {\n        queues[0].shift();\n        runQueues();\n    });\n    return;\n}\nfunction setProcessingStatus(value) {\n    processing = value;\n    const eventInternal = new CustomEvent(processing ? EVENT_QUEUE_START_INTERNAL : EVENT_QUEUE_END_INTERNAL);\n    document.dispatchEvent(eventInternal);\n    const eventPublic = new CustomEvent(processing ? EVENT_QUEUE_START : EVENT_QUEUE_END);\n    document.dispatchEvent(eventPublic);\n}\nfunction cartRequest(requestType, body, options, finalCallback) {\n    var _a;\n    const { extraRequestOnError } = _settings__WEBPACK_IMPORTED_MODULE_1__.settings;\n    const endpoint = getEndpoint(requestType);\n    let requestBody = undefined;\n    if (requestType !== REQUEST_GET) {\n        requestBody = body || {};\n    }\n    const method = requestType === REQUEST_GET ? 'GET' : 'POST';\n    const info = options.info || {};\n    const requestState = {\n        requestType,\n        endpoint,\n        requestBody,\n        info\n    };\n    const allSections = [];\n    const extraRequestSections = [];\n    const eventInternal = new CustomEvent(EVENT_REQUEST_START_INTERNAL, {\n        detail: {\n            requestState: {\n                requestType,\n                endpoint,\n                info,\n                requestBody\n            }\n        }\n    });\n    document.dispatchEvent(eventInternal);\n    const eventPublic = new CustomEvent(EVENT_REQUEST_START, {\n        detail: {\n            requestState: {\n                requestType,\n                endpoint,\n                info,\n                requestBody\n            }\n        }\n    });\n    document.dispatchEvent(eventPublic);\n    if (info.cancel) {\n        requestState.responseData = null;\n        cartRequestFinally(options, finalCallback, requestState);\n        return;\n    }\n    // If the AbortSignal is already aborted before starting the request, skip fetch\n    if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n        requestState.responseData = null;\n        requestState.fetchError = 'AbortError';\n        cartRequestFinally(options, finalCallback, requestState);\n        return;\n    }\n    if (requestBody !== undefined) {\n        let sectionsParam = undefined;\n        if (requestBody instanceof FormData || requestBody instanceof URLSearchParams) {\n            if (requestBody.has('sections')) {\n                sectionsParam = requestBody.get('sections').toString();\n            }\n        }\n        else {\n            sectionsParam = requestBody.sections;\n        }\n        if (typeof sectionsParam === 'string' || sectionsParam instanceof String || Array.isArray(sectionsParam)) {\n            if (Array.isArray(sectionsParam)) {\n                allSections.push(...sectionsParam);\n            }\n            else {\n                allSections.push(...(sectionsParam.split(',')));\n            }\n            // if it is an \"add.js\" request, it is better to get all the sections html from an extra request,\n            // because the response of the \"add.js\" request might contain html generated BEFORE merging cart items\n            // https://github.com/EvgeniyMukhamedjanov/liquid-ajax-cart/issues/72\n            if (REQUEST_ADD === requestType) {\n                extraRequestSections.push(...allSections.slice(0, 5));\n            }\n            // Add sections starting from index 5th to the extra request,\n            // as Shopify supports maximum 5 sections per request\n            if (allSections.length > 5) {\n                extraRequestSections.push(...allSections.slice(5));\n                const newSectionsParam = allSections.slice(0, 5).join(',');\n                if (requestBody instanceof FormData || requestBody instanceof URLSearchParams) {\n                    requestBody.set('sections', newSectionsParam);\n                }\n                else {\n                    requestBody.sections = newSectionsParam;\n                }\n            }\n        }\n        else if (sectionsParam !== undefined && sectionsParam !== null) {\n            console.error(`Liquid Ajax Cart: \"sections\" parameter in a Cart Ajax API request must be a string or an array. Now it is ${sectionsParam}`);\n        }\n    }\n    const fetchPayload = {\n        method\n    };\n    if (options === null || options === void 0 ? void 0 : options.signal) {\n        fetchPayload.signal = options.signal;\n    }\n    if (requestType !== REQUEST_GET) {\n        if (requestBody instanceof FormData || requestBody instanceof URLSearchParams) {\n            fetchPayload.body = requestBody;\n            fetchPayload.headers = {\n                'x-requested-with': 'XMLHttpRequest'\n            };\n        }\n        else {\n            fetchPayload.body = JSON.stringify(requestBody);\n            fetchPayload.headers = {\n                'Content-Type': 'application/json'\n            };\n        }\n    }\n    fetch(endpoint, fetchPayload).then((response) => __awaiter(this, void 0, void 0, function* () {\n        const responseBody = yield response.json();\n        return {\n            ok: response.ok,\n            status: response.status,\n            body: responseBody\n        };\n    })).then((data) => __awaiter(this, void 0, void 0, function* () {\n        var _b;\n        requestState.responseData = data;\n        // If Shopify responded with error, we need to get all sections again from the extra request,\n        // because Shopify might change the cart even if the response is an error\n        // https://github.com/Shopify/dawn/issues/2994\n        if (!(requestState.responseData.ok) && extraRequestOnError) {\n            extraRequestSections.unshift(...allSections.slice(0, 5));\n        }\n        if (extraRequestSections.length > 0) {\n            if (!((_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.aborted)) {\n                requestState.extraResponseData = yield extraRequest(extraRequestSections, options === null || options === void 0 ? void 0 : options.signal);\n            }\n        }\n        return requestState;\n    })).catch(error => {\n        // Do not log aborts as errors; they are expected when requests are intentionally cancelled\n        if (!(error && (error.name === 'AbortError' || error.code === 20))) {\n            console.error('Liquid Ajax Cart: Error while performing cart Ajax request');\n            console.error(error);\n        }\n        requestState.responseData = null;\n        requestState.fetchError = error;\n    }).finally(() => {\n        cartRequestFinally(options, finalCallback, requestState);\n    });\n}\nfunction cartRequestFinally(options, finalCallback, requestState) {\n    if ('firstCallback' in options) {\n        try {\n            options.firstCallback(requestState);\n        }\n        catch (e) {\n            console.error('Liquid Ajax Cart: Error in request \"firstCallback\" function');\n            console.error(e);\n        }\n    }\n    const detail = {\n        requestState\n    };\n    const eventInternal = new CustomEvent(EVENT_REQUEST_END_INTERNAL, {\n        detail\n    });\n    document.dispatchEvent(eventInternal);\n    const eventPublic = new CustomEvent(EVENT_REQUEST_END, {\n        detail\n    });\n    document.dispatchEvent(eventPublic);\n    if ('lastCallback' in options) {\n        try {\n            options.lastCallback(requestState);\n        }\n        catch (e) {\n            console.error('Liquid Ajax Cart: Error in request \"lastCallback\" function');\n            console.error(e);\n        }\n    }\n    finalCallback();\n}\nfunction extraRequest(sections = [], signal) {\n    const requestBody = {\n        updates: {}\n    };\n    if (sections.length > 0) {\n        requestBody.sections = sections.slice(0, 5).join(',');\n    }\n    return fetch(getEndpoint(REQUEST_UPDATE), {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody),\n        signal\n    }).then(response => response.json().then(responseBody => {\n        const data = {\n            ok: response.ok,\n            status: response.status,\n            body: responseBody\n        };\n        if (sections.length < 6) {\n            return data;\n        }\n        return extraRequest(sections.slice(5), signal).then(addData => {\n            var _a;\n            if (addData.ok && ((_a = addData.body) === null || _a === void 0 ? void 0 : _a.sections) && typeof addData.body.sections === 'object') {\n                if (!('sections' in data.body)) {\n                    data.body.sections = {};\n                }\n                data.body.sections = Object.assign(Object.assign({}, data.body.sections), addData.body.sections);\n            }\n            return data;\n        });\n    }));\n}\nfunction cartRequestGet(options = {}) {\n    addToQueues({ requestType: REQUEST_GET, body: undefined, options });\n}\nfunction cartRequestAdd(body = {}, options = {}) {\n    addToQueues({ requestType: REQUEST_ADD, body, options });\n}\nfunction cartRequestChange(body = {}, options = {}) {\n    addToQueues({ requestType: REQUEST_CHANGE, body, options });\n}\nfunction cartRequestUpdate(body = {}, options = {}) {\n    addToQueues({ requestType: REQUEST_UPDATE, body, options });\n}\nfunction cartRequestClear(body = {}, options = {}) {\n    addToQueues({ requestType: REQUEST_CLEAR, body, options });\n}\nfunction getEndpoint(requestType) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n    switch (requestType) {\n        case REQUEST_ADD:\n            return `${((_b = (_a = window.Shopify) === null || _a === void 0 ? void 0 : _a.routes) === null || _b === void 0 ? void 0 : _b.root) || '/'}cart/add.js`;\n        case REQUEST_CHANGE:\n            return `${((_d = (_c = window.Shopify) === null || _c === void 0 ? void 0 : _c.routes) === null || _d === void 0 ? void 0 : _d.root) || '/'}cart/change.js`;\n        case REQUEST_GET:\n            return `${((_f = (_e = window.Shopify) === null || _e === void 0 ? void 0 : _e.routes) === null || _f === void 0 ? void 0 : _f.root) || '/'}cart.js`;\n        case REQUEST_CLEAR:\n            return `${((_h = (_g = window.Shopify) === null || _g === void 0 ? void 0 : _g.routes) === null || _h === void 0 ? void 0 : _h.root) || '/'}cart/clear.js`;\n        case REQUEST_UPDATE:\n            return `${((_k = (_j = window.Shopify) === null || _j === void 0 ? void 0 : _j.routes) === null || _k === void 0 ? void 0 : _k.root) || '/'}cart/update.js`;\n        default:\n            return undefined;\n    }\n}\nfunction getProcessingStatus() {\n    return processing;\n}\n\n\n\n//# sourceURL=webpack://liquid-ajax-cart/./_src/ajax-api.ts?\n}");

/***/ }),

/***/ "./_src/const.ts":
/*!***********************!*\
  !*** ./_src/const.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CSS_CLASS_PREFIX: () => (/* binding */ CSS_CLASS_PREFIX),\n/* harmony export */   CUSTOM_ELEMENT_PREFIX: () => (/* binding */ CUSTOM_ELEMENT_PREFIX),\n/* harmony export */   DATA_ATTR_PREFIX: () => (/* binding */ DATA_ATTR_PREFIX),\n/* harmony export */   EVENT_INIT: () => (/* binding */ EVENT_INIT),\n/* harmony export */   EVENT_PREFIX: () => (/* binding */ EVENT_PREFIX)\n/* harmony export */ });\nconst EVENT_PREFIX = 'liquid-ajax-cart';\nconst DATA_ATTR_PREFIX = 'data-ajax-cart';\nconst CUSTOM_ELEMENT_PREFIX = 'ajax-cart';\nconst CSS_CLASS_PREFIX = 'js-ajax-cart';\nconst EVENT_INIT = `${EVENT_PREFIX}:init`;\n\n\n//# sourceURL=webpack://liquid-ajax-cart/./_src/const.ts?\n}");

/***/ }),

/***/ "./_src/controls.ts":
/*!**************************!*\
  !*** ./_src/controls.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cartControlsInit: () => (/* binding */ cartControlsInit)\n/* harmony export */ });\n/* harmony import */ var _controls_product_form_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./controls/product-form-element */ \"./_src/controls/product-form-element.ts\");\n/* harmony import */ var _controls_request_button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./controls/request-button */ \"./_src/controls/request-button.ts\");\n/* harmony import */ var _controls_quantity_input__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./controls/quantity-input */ \"./_src/controls/quantity-input.ts\");\n/* harmony import */ var _controls_property_input__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./controls/property-input */ \"./_src/controls/property-input.ts\");\n/* harmony import */ var _controls_quantity_element__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./controls/quantity-element */ \"./_src/controls/quantity-element.ts\");\n\n\n\n\n\nfunction cartControlsInit() {\n    (0,_controls_product_form_element__WEBPACK_IMPORTED_MODULE_0__.cartProductFormElementInit)();\n    (0,_controls_request_button__WEBPACK_IMPORTED_MODULE_1__.cartRequestButtonInit)();\n    (0,_controls_property_input__WEBPACK_IMPORTED_MODULE_3__.cartPropertyInputInit)();\n    (0,_controls_quantity_input__WEBPACK_IMPORTED_MODULE_2__.cartQuantityInputInit)();\n    (0,_controls_quantity_element__WEBPACK_IMPORTED_MODULE_4__.cartQuantityElementInit)();\n}\n\n\n\n//# sourceURL=webpack://liquid-ajax-cart/./_src/controls.ts?\n}");

/***/ }),

/***/ "./_src/controls/product-form-element.ts":
/*!***********************************************!*\
  !*** ./_src/controls/product-form-element.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HTMLProductFormElement: () => (/* binding */ HTMLProductFormElement),\n/* harmony export */   cartProductFormElementInit: () => (/* binding */ cartProductFormElementInit)\n/* harmony export */ });\n/* harmony import */ var _ajax_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ajax-api */ \"./_src/ajax-api.ts\");\n/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../const */ \"./_src/const.ts\");\n\n\nconst ELEMENT_TAG = `${_const__WEBPACK_IMPORTED_MODULE_1__.CUSTOM_ELEMENT_PREFIX}-product-form`;\nconst DATA_ATTR_LOADING = 'processing';\nclass HTMLProductFormElement extends HTMLElement {\n    connectedCallback() {\n        var _a, _b;\n        const $element = this;\n        const $innerForms = this.querySelectorAll('form');\n        if ($innerForms.length !== 1) {\n            console.error(`Liquid Ajax Cart: \"${ELEMENT_TAG}\" element must have one \"form\" element as a child, ${$innerForms.length} found`, $element);\n            return;\n        }\n        const $form = $innerForms[0];\n        const formActionUrl = new URL($form.action);\n        if (formActionUrl.pathname !== `${((_b = (_a = window.Shopify) === null || _a === void 0 ? void 0 : _a.routes) === null || _b === void 0 ? void 0 : _b.root) || '/'}cart/add`) {\n            console.error(`Liquid Ajax Cart: \"${ELEMENT_TAG}\" element's form \"action\" attribute value isn't a product form action URL`, $form, $element);\n            return;\n        }\n        $form.addEventListener('submit', event => {\n            if (!$element.hasAttribute(DATA_ATTR_LOADING)) {\n                const formData = new FormData($form);\n                $element.setAttribute(DATA_ATTR_LOADING, '');\n                (0,_ajax_api__WEBPACK_IMPORTED_MODULE_0__.cartRequestAdd)(formData, {\n                    lastCallback: () => {\n                        $element.removeAttribute(DATA_ATTR_LOADING);\n                    },\n                    info: {\n                        \"initiator\": $element\n                    }\n                });\n            }\n            event.preventDefault();\n        });\n    }\n}\nfunction cartProductFormElementInit() {\n    customElements.define(ELEMENT_TAG, HTMLProductFormElement);\n}\n\n\n\n//# sourceURL=webpack://liquid-ajax-cart/./_src/controls/product-form-element.ts?\n}");

/***/ }),

/***/ "./_src/controls/property-input.ts":
/*!*****************************************!*\
  !*** ./_src/controls/property-input.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cartPropertyInputInit: () => (/* binding */ cartPropertyInputInit)\n/* harmony export */ });\n/* harmony import */ var _ajax_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ajax-api */ \"./_src/ajax-api.ts\");\n/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../state */ \"./_src/state.ts\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers */ \"./_src/helpers.ts\");\n/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../const */ \"./_src/const.ts\");\n\n\n\n\nconst DATA_ATTR_PROPERTY_INPUT = `${_const__WEBPACK_IMPORTED_MODULE_3__.DATA_ATTR_PREFIX}-property-input`;\nfunction consoleInputError(element) {\n    const attributeValue = element.getAttribute(DATA_ATTR_PROPERTY_INPUT);\n    const nameValue = element.getAttribute('name');\n    console.error(`Liquid Ajax Cart: the element [${DATA_ATTR_PROPERTY_INPUT}=\"${attributeValue}\"]${nameValue ? `[name=\"${nameValue}\"]` : ''} has wrong attributes.`);\n}\nfunction isValidElement(element) {\n    if (!(element.hasAttribute(DATA_ATTR_PROPERTY_INPUT))) {\n        return false;\n    }\n    return !((!(element instanceof HTMLInputElement) || element.type === 'hidden')\n        && !(element instanceof HTMLTextAreaElement)\n        && !(element instanceof HTMLSelectElement));\n}\nfunction getInputData(element) {\n    const result = {\n        objectCode: undefined,\n        propertyName: undefined,\n        attributeValue: undefined\n    };\n    if (!(element.hasAttribute(DATA_ATTR_PROPERTY_INPUT))) {\n        return result;\n    }\n    let attributeValue = element.getAttribute(DATA_ATTR_PROPERTY_INPUT).trim();\n    if (!attributeValue) {\n        const nameValue = element.getAttribute('name').trim();\n        if (nameValue) {\n            attributeValue = nameValue;\n        }\n    }\n    if (!attributeValue) {\n        consoleInputError(element);\n        return result;\n    }\n    result.attributeValue = attributeValue;\n    if (attributeValue === 'note') {\n        result.objectCode = 'note';\n        return result;\n    }\n    let [objectCode, ...propertyName] = attributeValue.trim().split('[');\n    if (!propertyName\n        || propertyName.length !== 1\n        || propertyName[0].length < 2\n        || propertyName[0].indexOf(']') !== propertyName[0].length - 1) {\n        consoleInputError(element);\n        return result;\n    }\n    result.objectCode = objectCode;\n    result.propertyName = propertyName[0].replace(']', '');\n    return result;\n}\nfunction initEventListeners() {\n    document.addEventListener('change', function (e) {\n        changeHandler(e.target, e);\n    }, false);\n    document.addEventListener(\"keydown\", function (e) {\n        const element = e.target;\n        if (e.key === \"Enter\") {\n            if (!(element instanceof HTMLTextAreaElement) || e.ctrlKey) {\n                changeHandler(element, e);\n            }\n        }\n        if (e.key === \"Escape\") {\n            escHandler(element);\n        }\n    }, false);\n}\nfunction processingHandler() {\n    document.querySelectorAll(`[${DATA_ATTR_PROPERTY_INPUT}]`).forEach(element => {\n        if (!isValidElement(element)) {\n            return;\n        }\n        if ((0,_ajax_api__WEBPACK_IMPORTED_MODULE_0__.getProcessingStatus)()) {\n            element.disabled = true;\n            return;\n        }\n        const { objectCode, propertyName, attributeValue } = getInputData(element);\n        if (!objectCode) {\n            return;\n        }\n        const state = (0,_state__WEBPACK_IMPORTED_MODULE_1__.getCartState)();\n        let propertyValue = undefined;\n        let doNotEnable = false;\n        if (objectCode === 'note') {\n            propertyValue = state.cart.note;\n        }\n        else if (objectCode === 'attributes') {\n            propertyValue = state.cart.attributes[propertyName];\n        }\n        else {\n            const [lineItem, objectCodeType] = (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.findLineItemByCode)(objectCode, state);\n            if (lineItem) {\n                propertyValue = lineItem.properties[propertyName];\n            }\n            if (lineItem === null) {\n                console.error(`Liquid Ajax Cart: line item with ${objectCodeType}=\"${objectCode}\" was not found when the [${DATA_ATTR_PROPERTY_INPUT}] element with \"${attributeValue}\" value tried to get updated from the State`);\n                doNotEnable = true;\n            }\n        }\n        if (element instanceof HTMLInputElement && (element.type === 'checkbox' || element.type === 'radio')) {\n            element.checked = element.value === propertyValue;\n        }\n        else {\n            if (typeof propertyValue !== 'string'\n                && !(propertyValue instanceof String)\n                && typeof propertyValue !== 'number'\n                && !(propertyValue instanceof Number)) {\n                if (Array.isArray(propertyValue) || propertyValue instanceof Object) {\n                    propertyValue = JSON.stringify(propertyValue);\n                    console.warn(`Liquid Ajax Cart: the ${DATA_ATTR_PROPERTY_INPUT} with the \"${attributeValue}\" value is bound to the ${propertyName} ${objectCode === 'attributes' ? 'attribute' : 'property'} that is not string or number: ${propertyValue}`);\n                }\n                else {\n                    propertyValue = '';\n                }\n            }\n            element.value = propertyValue;\n        }\n        if (!doNotEnable) {\n            element.disabled = false;\n        }\n    });\n}\nfunction changeHandler(element, e) {\n    if (!isValidElement(element)) {\n        return;\n    }\n    if (e) {\n        e.preventDefault(); // prevent form submission\n    }\n    element.blur();\n    const state = (0,_state__WEBPACK_IMPORTED_MODULE_1__.getCartState)();\n    if ((0,_ajax_api__WEBPACK_IMPORTED_MODULE_0__.getProcessingStatus)()) {\n        return;\n    }\n    const { objectCode, propertyName, attributeValue } = getInputData(element);\n    if (!objectCode) {\n        return;\n    }\n    let newPropertyValue = element.value;\n    if (element instanceof HTMLInputElement && element.type === 'checkbox' && !element.checked) {\n        let negativeValueInput = document.querySelector(`input[type=\"hidden\"][${DATA_ATTR_PROPERTY_INPUT}=\"${attributeValue}\"]`);\n        if (!negativeValueInput && (objectCode === 'note' || objectCode === 'attributes')) {\n            negativeValueInput = document.querySelector(`input[type=\"hidden\"][${DATA_ATTR_PROPERTY_INPUT}][name=\"${attributeValue}\"]`);\n        }\n        if (negativeValueInput) {\n            newPropertyValue = negativeValueInput.value;\n        }\n        else {\n            newPropertyValue = '';\n        }\n    }\n    if (objectCode === 'note') {\n        const formData = new FormData();\n        formData.set('note', newPropertyValue);\n        (0,_ajax_api__WEBPACK_IMPORTED_MODULE_0__.cartRequestUpdate)(formData, { info: { initiator: element } });\n    }\n    else if (objectCode === 'attributes') {\n        const formData = new FormData();\n        formData.set(`attributes[${propertyName}]`, newPropertyValue);\n        (0,_ajax_api__WEBPACK_IMPORTED_MODULE_0__.cartRequestUpdate)(formData, { info: { initiator: element } });\n    }\n    else {\n        const [lineItem, objectCodeType] = (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.findLineItemByCode)(objectCode, state);\n        if (lineItem === null) {\n            console.error(`Liquid Ajax Cart: line item with ${objectCodeType}=\"${objectCode}\" was not found when the [${DATA_ATTR_PROPERTY_INPUT}] element with \"${attributeValue}\" value tried to update the cart`);\n        }\n        if (!lineItem) {\n            return;\n        }\n        const newProperties = Object.assign({}, lineItem.properties);\n        newProperties[propertyName] = newPropertyValue;\n        const formData = new FormData();\n        let requestBody = formData;\n        formData.set(objectCodeType, objectCode);\n        formData.set('quantity', lineItem.quantity.toString());\n        for (let p in newProperties) {\n            const v = newProperties[p];\n            if (typeof v === 'string' || v instanceof String) {\n                formData.set(`properties[${p}]`, newProperties[p]);\n            }\n            else {\n                requestBody = {\n                    [objectCodeType]: objectCode,\n                    quantity: lineItem.quantity,\n                    properties: newProperties\n                };\n            }\n        }\n        (0,_ajax_api__WEBPACK_IMPORTED_MODULE_0__.cartRequestChange)(requestBody, { info: { initiator: element } });\n    }\n}\nfunction escHandler(element) {\n    if (!isValidElement(element)) {\n        return;\n    }\n    if (!(element instanceof HTMLInputElement) && !(element instanceof HTMLTextAreaElement)) {\n        return;\n    }\n    if (element instanceof HTMLInputElement && (element.type === 'checkbox' || element.type === 'radio')) {\n        return;\n    }\n    const state = (0,_state__WEBPACK_IMPORTED_MODULE_1__.getCartState)();\n    const { objectCode, propertyName } = getInputData(element);\n    if (!objectCode) {\n        return;\n    }\n    let propertyValue = undefined;\n    if (objectCode === 'note') {\n        propertyValue = state.cart.note;\n    }\n    else if (objectCode === 'attributes') {\n        propertyValue = state.cart.attributes[propertyName];\n    }\n    else {\n        const [lineItem] = (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.findLineItemByCode)(objectCode, state);\n        if (lineItem) {\n            propertyValue = lineItem.properties[propertyName];\n        }\n    }\n    if (propertyValue !== undefined) {\n        if (!propertyValue && typeof propertyValue !== 'string' && !(propertyValue instanceof String)) {\n            propertyValue = '';\n        }\n        element.value = String(propertyValue);\n    }\n    element.blur();\n}\nfunction cartPropertyInputInit() {\n    initEventListeners();\n    document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_0__.EVENT_QUEUE_START_INTERNAL, processingHandler);\n    document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_0__.EVENT_REQUEST_END_INTERNAL, processingHandler);\n    document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_0__.EVENT_QUEUE_END_INTERNAL, processingHandler);\n    processingHandler();\n}\n\n\n\n//# sourceURL=webpack://liquid-ajax-cart/./_src/controls/property-input.ts?\n}");

/***/ }),

/***/ "./_src/controls/quantity-element.ts":
/*!*******************************************!*\
  !*** ./_src/controls/quantity-element.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cartQuantityElementInit: () => (/* binding */ cartQuantityElementInit)\n/* harmony export */ });\n/* harmony import */ var _quantity_input__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./quantity-input */ \"./_src/controls/quantity-input.ts\");\n/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../const */ \"./_src/const.ts\");\n/* harmony import */ var _ajax_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ajax-api */ \"./_src/ajax-api.ts\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../settings */ \"./_src/settings.ts\");\n\n\n\n\nconst ELEMENT_TAG = `${_const__WEBPACK_IMPORTED_MODULE_1__.CUSTOM_ELEMENT_PREFIX}-quantity`;\nconst DATA_ATTR_QUANTITY_PLUS = `${_const__WEBPACK_IMPORTED_MODULE_1__.DATA_ATTR_PREFIX}-quantity-plus`;\nconst DATA_ATTR_QUANTITY_MINUS = `${_const__WEBPACK_IMPORTED_MODULE_1__.DATA_ATTR_PREFIX}-quantity-minus`;\nfunction cartQuantityElementInit() {\n    customElements.define(ELEMENT_TAG, class extends HTMLElement {\n        constructor() {\n            super(...arguments);\n            this._timer = undefined;\n        }\n        connectedCallback() {\n            const $innerInputs = this.querySelectorAll('input');\n            if ($innerInputs.length !== 1) {\n                console.error(`Liquid Ajax Cart: \"${ELEMENT_TAG}\" element must have one \"input\" element as a child, ${$innerInputs.length} found`, this);\n                return;\n            }\n            this._$input = $innerInputs[0];\n            if (!this._$input.hasAttribute(_quantity_input__WEBPACK_IMPORTED_MODULE_0__.DATA_ATTR_QUANTITY_INPUT)) {\n                console.error(`Liquid Ajax Cart: \"${ELEMENT_TAG}\" element's input must have the \"${_quantity_input__WEBPACK_IMPORTED_MODULE_0__.DATA_ATTR_QUANTITY_INPUT}\" attribute`, this._$input, this);\n                return;\n            }\n            this._$buttons = Array.from(this.querySelectorAll(`[${DATA_ATTR_QUANTITY_MINUS}], [${DATA_ATTR_QUANTITY_PLUS}]`));\n            this._$input.addEventListener('change', this._updateDOM.bind(this));\n            document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_2__.EVENT_QUEUE_START_INTERNAL, this._updateDOM.bind(this));\n            document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_2__.EVENT_REQUEST_END_INTERNAL, this._updateDOM.bind(this));\n            document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_2__.EVENT_QUEUE_END_INTERNAL, this._updateDOM.bind(this));\n            this._updateDOM();\n            this._$buttons.forEach($button => {\n                $button.addEventListener('click', event => {\n                    const { quantityTagAllowZero } = _settings__WEBPACK_IMPORTED_MODULE_3__.settings;\n                    const minValue = quantityTagAllowZero === true ? 0 : 1;\n                    if (!(0,_ajax_api__WEBPACK_IMPORTED_MODULE_2__.getProcessingStatus)()) {\n                        const qtyValueCurrent = Number(this._$input.value);\n                        if (isNaN(qtyValueCurrent)) {\n                            console.error(`Liquid Ajax Cart: \"${ELEMENT_TAG}\" element's input value isn't a number`, this._$input, this);\n                            return;\n                        }\n                        let qtyValueNew = qtyValueCurrent;\n                        let step = Number(this._$input.getAttribute('step') || 1);\n                        if (!Number.isSafeInteger(step) || step <= 0) {\n                            step = 1;\n                        }\n                        qtyValueNew = $button.hasAttribute(DATA_ATTR_QUANTITY_PLUS) ? qtyValueNew + step : qtyValueNew - step;\n                        if (qtyValueNew < minValue)\n                            qtyValueNew = minValue;\n                        if (qtyValueNew !== qtyValueCurrent) {\n                            this._$input.value = qtyValueNew.toString();\n                            this._runAwaiting();\n                            this._updateDOM();\n                        }\n                    }\n                    event.preventDefault();\n                });\n                $button.addEventListener(\"focusout\", (event) => {\n                    if (event.relatedTarget && $button.contains(event.relatedTarget))\n                        return;\n                    if (this._timer !== undefined) {\n                        this._runRequest();\n                    }\n                });\n            });\n        }\n        _runAwaiting() {\n            const { quantityTagDebounce } = _settings__WEBPACK_IMPORTED_MODULE_3__.settings;\n            if (this._timer !== undefined) {\n                clearTimeout(this._timer);\n            }\n            if (quantityTagDebounce > 0) {\n                this._timer = setTimeout(() => {\n                    this._runRequest();\n                }, Number(quantityTagDebounce));\n                return;\n            }\n            this._runRequest();\n        }\n        _runRequest() {\n            if (this._timer !== undefined) {\n                clearTimeout(this._timer);\n            }\n            this._timer = undefined;\n            if (!(0,_ajax_api__WEBPACK_IMPORTED_MODULE_2__.getProcessingStatus)()) {\n                this._$input.dispatchEvent(new Event('change', { bubbles: true }));\n            }\n        }\n        _updateDOM() {\n            this._$buttons.forEach($button => {\n                const disabled = (0,_ajax_api__WEBPACK_IMPORTED_MODULE_2__.getProcessingStatus)()\n                    || ($button.hasAttribute(DATA_ATTR_QUANTITY_MINUS) && !(_settings__WEBPACK_IMPORTED_MODULE_3__.settings.quantityTagAllowZero) && this._$input.value === \"1\");\n                disabled\n                    ? $button.setAttribute(\"aria-disabled\", \"true\")\n                    : $button.removeAttribute(\"aria-disabled\");\n                if ($button instanceof HTMLButtonElement) {\n                    $button.toggleAttribute(\"disabled\", disabled);\n                }\n            });\n        }\n    });\n}\n\n\n\n//# sourceURL=webpack://liquid-ajax-cart/./_src/controls/quantity-element.ts?\n}");

/***/ }),

/***/ "./_src/controls/quantity-input.ts":
/*!*****************************************!*\
  !*** ./_src/controls/quantity-input.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DATA_ATTR_QUANTITY_INPUT: () => (/* binding */ DATA_ATTR_QUANTITY_INPUT),\n/* harmony export */   cartQuantityInputInit: () => (/* binding */ cartQuantityInputInit)\n/* harmony export */ });\n/* harmony import */ var _ajax_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ajax-api */ \"./_src/ajax-api.ts\");\n/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../state */ \"./_src/state.ts\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers */ \"./_src/helpers.ts\");\n/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../const */ \"./_src/const.ts\");\n\n\n\n\nconst DATA_ATTR_QUANTITY_INPUT = `${_const__WEBPACK_IMPORTED_MODULE_3__.DATA_ATTR_PREFIX}-quantity-input`;\nfunction initEventListeners() {\n    document.addEventListener('change', function (e) {\n        changeHandler(e.target, e);\n    }, false);\n    document.addEventListener(\"keydown\", function (e) {\n        if (e.key === \"Enter\") {\n            changeHandler(e.target, e);\n        }\n        if (e.key === \"Escape\") {\n            escHandler(e.target);\n        }\n    }, false);\n}\nfunction isValidElement(element) {\n    if (!(element.hasAttribute(DATA_ATTR_QUANTITY_INPUT))) {\n        return false;\n    }\n    if (!(element instanceof HTMLInputElement && ['text', 'number'].includes(element.type)) &&\n        !(element instanceof HTMLSelectElement && ['select-one'].includes(element.type))) {\n        console.error(`Liquid Ajax Cart: the ${DATA_ATTR_QUANTITY_INPUT} attribute supports \"input\" elements of types \"text\", \"number\" and non-multiple \"select\" elements`);\n        return false;\n    }\n    return true;\n}\nfunction processingHandler() {\n    document.querySelectorAll(`input[${DATA_ATTR_QUANTITY_INPUT}], select[${DATA_ATTR_QUANTITY_INPUT}]`).forEach((input) => {\n        if (!isValidElement(input)) {\n            return;\n        }\n        if ((0,_ajax_api__WEBPACK_IMPORTED_MODULE_0__.getProcessingStatus)()) {\n            input.disabled = true;\n            return;\n        }\n        const state = (0,_state__WEBPACK_IMPORTED_MODULE_1__.getCartState)();\n        const lineItemCode = input.getAttribute(DATA_ATTR_QUANTITY_INPUT).trim();\n        const [lineItem] = (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.findLineItemByCode)(lineItemCode, state);\n        if (lineItem) {\n            input.value = lineItem.quantity.toString();\n        }\n        else if (lineItem === null) {\n            input.value = \"0\";\n        }\n        input.disabled = false;\n    });\n}\nfunction changeHandler(element, e) {\n    if (!isValidElement(element)) {\n        return;\n    }\n    if (e) {\n        e.preventDefault(); // prevent form submission\n    }\n    if ((0,_ajax_api__WEBPACK_IMPORTED_MODULE_0__.getProcessingStatus)()) {\n        return;\n    }\n    let value = Number(element.value.trim());\n    const lineItem = element.getAttribute(DATA_ATTR_QUANTITY_INPUT).trim();\n    if (isNaN(value)) {\n        console.error(`Liquid Ajax Cart: input value of a ${DATA_ATTR_QUANTITY_INPUT} must be an Integer number`);\n        return;\n    }\n    if (value < 1) {\n        value = 0;\n    }\n    if (!lineItem) {\n        console.error(`Liquid Ajax Cart: attribute value of a ${DATA_ATTR_QUANTITY_INPUT} must be an item key or an item index`);\n        return;\n    }\n    const lineItemReqProperty = lineItem.length > 3 ? 'id' : 'line';\n    const formData = new FormData();\n    formData.set(lineItemReqProperty, lineItem);\n    formData.set('quantity', value.toString());\n    (0,_ajax_api__WEBPACK_IMPORTED_MODULE_0__.cartRequestChange)(formData, { info: { initiator: element } });\n    element.blur();\n}\nfunction escHandler(element) {\n    if (!isValidElement(element)) {\n        return;\n    }\n    const attributeValue = element.getAttribute(DATA_ATTR_QUANTITY_INPUT).trim();\n    let relatedLineItem;\n    const state = (0,_state__WEBPACK_IMPORTED_MODULE_1__.getCartState)();\n    if (attributeValue.length > 3) {\n        relatedLineItem = state.cart.items.find(lineItem => lineItem.key === attributeValue);\n    }\n    else {\n        const lineItemIndex = Number(attributeValue) - 1;\n        relatedLineItem = state.cart.items[lineItemIndex];\n    }\n    if (relatedLineItem) {\n        element.value = relatedLineItem.quantity.toString();\n    }\n    element.blur();\n}\nfunction cartQuantityInputInit() {\n    initEventListeners();\n    document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_0__.EVENT_QUEUE_START_INTERNAL, processingHandler);\n    document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_0__.EVENT_REQUEST_END_INTERNAL, processingHandler);\n    document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_0__.EVENT_QUEUE_END_INTERNAL, processingHandler);\n    processingHandler();\n}\n\n\n\n//# sourceURL=webpack://liquid-ajax-cart/./_src/controls/quantity-input.ts?\n}");

/***/ }),

/***/ "./_src/controls/request-button.ts":
/*!*****************************************!*\
  !*** ./_src/controls/request-button.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cartRequestButtonInit: () => (/* binding */ cartRequestButtonInit)\n/* harmony export */ });\n/* harmony import */ var _ajax_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ajax-api */ \"./_src/ajax-api.ts\");\n/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../const */ \"./_src/const.ts\");\nvar _a, _b, _c, _d, _e, _f, _g, _h;\n\n\nconst CHANGE_URL = `${((_b = (_a = window.Shopify) === null || _a === void 0 ? void 0 : _a.routes) === null || _b === void 0 ? void 0 : _b.root) || '/'}cart/change`;\nconst ADD_URL = `${((_d = (_c = window.Shopify) === null || _c === void 0 ? void 0 : _c.routes) === null || _d === void 0 ? void 0 : _d.root) || '/'}cart/add`;\nconst CLEAR_URL = `${((_f = (_e = window.Shopify) === null || _e === void 0 ? void 0 : _e.routes) === null || _f === void 0 ? void 0 : _f.root) || '/'}cart/clear`;\nconst UPDATE_URL = `${((_h = (_g = window.Shopify) === null || _g === void 0 ? void 0 : _g.routes) === null || _h === void 0 ? void 0 : _h.root) || '/'}cart/update`;\nconst DATA_ATTR_REQUEST_BUTTON = `${_const__WEBPACK_IMPORTED_MODULE_1__.DATA_ATTR_PREFIX}-request-button`;\nfunction clickHandler(element, e) {\n    let url = undefined;\n    const validURLs = [CHANGE_URL, ADD_URL, CLEAR_URL, UPDATE_URL];\n    if (!(element.hasAttribute(DATA_ATTR_REQUEST_BUTTON))) {\n        return;\n    }\n    const attr = element.getAttribute(DATA_ATTR_REQUEST_BUTTON);\n    if (attr) {\n        let attrURL;\n        try {\n            attrURL = new URL(attr, window.location.origin);\n            if (validURLs.includes(attrURL.pathname)) {\n                url = attrURL;\n            }\n            else {\n                throw `URL should be one of the following: ${CHANGE_URL}, ${ADD_URL}, ${UPDATE_URL}, ${CLEAR_URL}`;\n            }\n        }\n        catch (error) {\n            console.error(`Liquid Ajax Cart: ${DATA_ATTR_REQUEST_BUTTON} contains an invalid URL as a parameter.`, error);\n        }\n    }\n    else {\n        if (element instanceof HTMLAnchorElement && element.hasAttribute('href')) {\n            const linkURL = new URL(element.href);\n            if (validURLs.includes(linkURL.pathname)) {\n                url = linkURL;\n            }\n            else if (element.hasAttribute(DATA_ATTR_REQUEST_BUTTON)) {\n                console.error(`Liquid Ajax Cart: a link with the ${DATA_ATTR_REQUEST_BUTTON} contains an invalid href URL.`, `URL should be one of the following: ${CHANGE_URL}, ${ADD_URL}, ${UPDATE_URL}, ${CLEAR_URL}`);\n            }\n        }\n    }\n    if (url === undefined) {\n        console.error(`Liquid Ajax Cart: a ${DATA_ATTR_REQUEST_BUTTON} element doesn't have a valid URL`);\n        return;\n    }\n    if (e) {\n        e.preventDefault();\n    }\n    if ((0,_ajax_api__WEBPACK_IMPORTED_MODULE_0__.getProcessingStatus)()) {\n        return;\n    }\n    const formData = new FormData();\n    url.searchParams.forEach((value, key) => {\n        formData.append(key, value);\n    });\n    switch (url.pathname) {\n        case ADD_URL:\n            (0,_ajax_api__WEBPACK_IMPORTED_MODULE_0__.cartRequestAdd)(formData, { info: { initiator: element } });\n            break;\n        case CHANGE_URL:\n            (0,_ajax_api__WEBPACK_IMPORTED_MODULE_0__.cartRequestChange)(formData, { info: { initiator: element } });\n            break;\n        case UPDATE_URL:\n            (0,_ajax_api__WEBPACK_IMPORTED_MODULE_0__.cartRequestUpdate)(formData, { info: { initiator: element } });\n            break;\n        case CLEAR_URL:\n            (0,_ajax_api__WEBPACK_IMPORTED_MODULE_0__.cartRequestClear)({}, { info: { initiator: element } });\n            break;\n    }\n}\nfunction cartRequestButtonInit() {\n    document.addEventListener('click', function (e) {\n        for (let target = e.target; target && target != document.documentElement; target = target.parentElement) {\n            clickHandler(target, e);\n        }\n    }, false);\n}\n\n\n\n//# sourceURL=webpack://liquid-ajax-cart/./_src/controls/request-button.ts?\n}");

/***/ }),

/***/ "./_src/dom-binder.ts":
/*!****************************!*\
  !*** ./_src/dom-binder.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cartDomBinderInit: () => (/* binding */ cartDomBinderInit),\n/* harmony export */   cartDomBinderRerender: () => (/* binding */ cartDomBinderRerender)\n/* harmony export */ });\n/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./state */ \"./_src/state.ts\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./settings */ \"./_src/settings.ts\");\n/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./const */ \"./_src/const.ts\");\n/* harmony import */ var _ajax_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ajax-api */ \"./_src/ajax-api.ts\");\n\n\n\n\nconst DATA_ATTR_BIND_STATE = `${_const__WEBPACK_IMPORTED_MODULE_2__.DATA_ATTR_PREFIX}-bind`;\nfunction updateDOM() {\n    const state = (0,_state__WEBPACK_IMPORTED_MODULE_0__.getCartState)();\n    if (state.cart) {\n        document.querySelectorAll(`[${DATA_ATTR_BIND_STATE}]`).forEach((element) => {\n            const path = element.getAttribute(DATA_ATTR_BIND_STATE);\n            element.textContent = computeValue(path);\n        });\n    }\n}\nfunction computeValue(str) {\n    const { binderFormatters } = _settings__WEBPACK_IMPORTED_MODULE_1__.settings;\n    const [path, ...filters] = str.split('|');\n    const state = (0,_state__WEBPACK_IMPORTED_MODULE_0__.getCartState)().cart;\n    let value = getStateValueByString(path, state);\n    filters.forEach(element => {\n        const formatterName = element.trim();\n        if (formatterName !== '') {\n            if (typeof binderFormatters === 'object' && formatterName in binderFormatters) {\n                value = binderFormatters[formatterName](value);\n            }\n            else if (formatterName in defaultFormatters) {\n                value = defaultFormatters[formatterName](value);\n            }\n            else {\n                console.warn(`Liquid Ajax Cart: the \"${formatterName}\" formatter is not found`);\n            }\n        }\n    });\n    if (typeof value === 'string' || value instanceof String || typeof value === 'number' || value instanceof Number) {\n        return value.toString();\n    }\n    console.error(`Liquid Ajax Cart: the calculated value for the ${DATA_ATTR_BIND_STATE}=\"${str}\" element must be string or number. But the value is`, value);\n    return '';\n}\nfunction getStateValueByString(str, obj) {\n    const properties = str.split('.');\n    const currentProperty = properties.shift().trim();\n    if (currentProperty !== '' && currentProperty in obj && properties.length > 0) {\n        return getStateValueByString(properties.join('.'), obj[currentProperty]);\n    }\n    return obj[currentProperty];\n}\nconst defaultFormatters = {\n    'money_with_currency': (value) => {\n        var _a;\n        const state = (0,_state__WEBPACK_IMPORTED_MODULE_0__.getCartState)();\n        if (typeof value !== 'number' && !(value instanceof Number)) {\n            console.error(`Liquid Ajax Cart: the 'money_with_currency' formatter is not applied because the value is not a number. The value is `, value);\n            return value;\n        }\n        const moneyValue = value / 100;\n        if ('Intl' in window && ((_a = window.Shopify) === null || _a === void 0 ? void 0 : _a.locale)) {\n            return Intl.NumberFormat(window.Shopify.locale, {\n                style: 'currency',\n                currency: state.cart.currency\n            }).format(moneyValue);\n        }\n        return `${moneyValue.toFixed(2)} ${state.cart.currency}`;\n    }\n};\nfunction cartDomBinderRerender() {\n    updateDOM();\n}\nfunction cartDomBinderInit() {\n    document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_3__.EVENT_REQUEST_END_INTERNAL, updateDOM);\n    updateDOM();\n}\n\n\n\n//# sourceURL=webpack://liquid-ajax-cart/./_src/dom-binder.ts?\n}");

/***/ }),

/***/ "./_src/global-classes.ts":
/*!********************************!*\
  !*** ./_src/global-classes.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cartGlobalClassesInit: () => (/* binding */ cartGlobalClassesInit)\n/* harmony export */ });\n/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./state */ \"./_src/state.ts\");\n/* harmony import */ var _ajax_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ajax-api */ \"./_src/ajax-api.ts\");\n/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./const */ \"./_src/const.ts\");\n\n\n\nconst CSS_CLASS_INIT = `${_const__WEBPACK_IMPORTED_MODULE_2__.CSS_CLASS_PREFIX}-init`;\nconst CSS_CLASS_IN_PROGRESS = `${_const__WEBPACK_IMPORTED_MODULE_2__.CSS_CLASS_PREFIX}-processing`;\nconst CSS_CLASS_EMPTY = `${_const__WEBPACK_IMPORTED_MODULE_2__.CSS_CLASS_PREFIX}-empty`;\nconst CSS_CLASS_NOT_EMPTY = `${_const__WEBPACK_IMPORTED_MODULE_2__.CSS_CLASS_PREFIX}-not-empty`;\nfunction updateClasses() {\n    const $element = document.querySelector('html');\n    const state = (0,_state__WEBPACK_IMPORTED_MODULE_0__.getCartState)();\n    $element.classList.toggle(CSS_CLASS_INIT, state.cart !== null);\n    $element.classList.toggle(CSS_CLASS_IN_PROGRESS, (0,_ajax_api__WEBPACK_IMPORTED_MODULE_1__.getProcessingStatus)());\n    $element.classList.toggle(CSS_CLASS_EMPTY, state.cart.item_count === 0);\n    $element.classList.toggle(CSS_CLASS_NOT_EMPTY, state.cart.item_count > 0);\n}\nconst cartGlobalClassesInit = () => {\n    document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_1__.EVENT_QUEUE_START_INTERNAL, updateClasses);\n    document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_1__.EVENT_REQUEST_END_INTERNAL, updateClasses);\n    document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_1__.EVENT_QUEUE_END_INTERNAL, updateClasses);\n    updateClasses();\n};\n\n\n\n//# sourceURL=webpack://liquid-ajax-cart/./_src/global-classes.ts?\n}");

/***/ }),

/***/ "./_src/helpers.ts":
/*!*************************!*\
  !*** ./_src/helpers.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   findLineItemByCode: () => (/* binding */ findLineItemByCode)\n/* harmony export */ });\nfunction findLineItemByCode(code, state) {\n    let lineItem;\n    let codeType;\n    if (code.length > 3) {\n        lineItem = state.cart.items.find((lineItem) => lineItem.key === code);\n        codeType = 'id';\n    }\n    else {\n        lineItem = state.cart.items[Number(code) - 1];\n        codeType = 'line';\n    }\n    if (lineItem === undefined) {\n        lineItem = null;\n        console.error(`Liquid Ajax Cart: line item with ${codeType}=\"${code}\" not found`);\n    }\n    return [lineItem, codeType];\n}\n\n\n//# sourceURL=webpack://liquid-ajax-cart/./_src/helpers.ts?\n}");

/***/ }),

/***/ "./_src/index.ts":
/*!***********************!*\
  !*** ./_src/index.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./settings */ \"./_src/settings.ts\");\n/* harmony import */ var _ajax_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ajax-api */ \"./_src/ajax-api.ts\");\n/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./state */ \"./_src/state.ts\");\n/* harmony import */ var _dom_binder__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dom-binder */ \"./_src/dom-binder.ts\");\n/* harmony import */ var _sections__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sections */ \"./_src/sections.ts\");\n/* harmony import */ var _controls__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./controls */ \"./_src/controls.ts\");\n/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./messages */ \"./_src/messages.ts\");\n/* harmony import */ var _global_classes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./global-classes */ \"./_src/global-classes.ts\");\n/* harmony import */ var _mutations__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./mutations */ \"./_src/mutations.ts\");\n/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./const */ \"./_src/const.ts\");\n\n\n\n\n\n\n\n\n\n\nlet isInit = false;\nif (!('liquidAjaxCart' in window)) {\n    window.liquidAjaxCart = {\n        conf: _settings__WEBPACK_IMPORTED_MODULE_0__.configureCart,\n    };\n    function addReadOnlyProp(key, fn) {\n        Object.defineProperty(window.liquidAjaxCart, key, {\n            get: fn,\n            set: () => {\n                throw new Error(`Liquid Ajax Cart: the \"${key}\" is a read-only property`);\n            },\n            enumerable: true\n        });\n    }\n    addReadOnlyProp('init', () => isInit);\n    (0,_sections__WEBPACK_IMPORTED_MODULE_4__.cartSectionsInit)();\n    (0,_messages__WEBPACK_IMPORTED_MODULE_6__.cartMessagesInit)();\n    (0,_mutations__WEBPACK_IMPORTED_MODULE_8__.cartMutationsInit)();\n    (0,_state__WEBPACK_IMPORTED_MODULE_2__.cartStateInit)().then(() => {\n        (0,_dom_binder__WEBPACK_IMPORTED_MODULE_3__.cartDomBinderInit)();\n        (0,_controls__WEBPACK_IMPORTED_MODULE_5__.cartControlsInit)();\n        (0,_global_classes__WEBPACK_IMPORTED_MODULE_7__.cartGlobalClassesInit)();\n        window.liquidAjaxCart.get = _ajax_api__WEBPACK_IMPORTED_MODULE_1__.cartRequestGet;\n        window.liquidAjaxCart.add = _ajax_api__WEBPACK_IMPORTED_MODULE_1__.cartRequestAdd;\n        window.liquidAjaxCart.change = _ajax_api__WEBPACK_IMPORTED_MODULE_1__.cartRequestChange;\n        window.liquidAjaxCart.update = _ajax_api__WEBPACK_IMPORTED_MODULE_1__.cartRequestUpdate;\n        window.liquidAjaxCart.clear = _ajax_api__WEBPACK_IMPORTED_MODULE_1__.cartRequestClear;\n        addReadOnlyProp('cart', () => (0,_state__WEBPACK_IMPORTED_MODULE_2__.getCartState)().cart);\n        addReadOnlyProp('processing', _ajax_api__WEBPACK_IMPORTED_MODULE_1__.getProcessingStatus);\n        window.addEventListener('focus', () => {\n            if (_settings__WEBPACK_IMPORTED_MODULE_0__.settings.updateOnWindowFocus) {\n                (0,_ajax_api__WEBPACK_IMPORTED_MODULE_1__.cartRequestUpdate)({}, {});\n            }\n        });\n        window.addEventListener('pageshow', event => {\n            if (event.persisted || performance.getEntriesByType(\"navigation\")[0].type === 'back_forward') {\n                window.liquidAjaxCart.update({}, {});\n            }\n        });\n        isInit = true;\n        const event = new CustomEvent(_const__WEBPACK_IMPORTED_MODULE_9__.EVENT_INIT);\n        document.dispatchEvent(event);\n    });\n}\n\n\n//# sourceURL=webpack://liquid-ajax-cart/./_src/index.ts?\n}");

/***/ }),

/***/ "./_src/messages.ts":
/*!**************************!*\
  !*** ./_src/messages.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cartMessagesInit: () => (/* binding */ cartMessagesInit)\n/* harmony export */ });\n/* harmony import */ var _ajax_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ajax-api */ \"./_src/ajax-api.ts\");\n/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./state */ \"./_src/state.ts\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./settings */ \"./_src/settings.ts\");\n/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./const */ \"./_src/const.ts\");\n/* harmony import */ var _controls_product_form_element__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./controls/product-form-element */ \"./_src/controls/product-form-element.ts\");\n\n\n\n\n\nconst DATA_ATTR_ERRORS = `${_const__WEBPACK_IMPORTED_MODULE_3__.DATA_ATTR_PREFIX}-errors`;\nfunction getRequestError(requestState) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    const { requestErrorText } = _settings__WEBPACK_IMPORTED_MODULE_2__.settings;\n    if ((_a = requestState.responseData) === null || _a === void 0 ? void 0 : _a.ok)\n        return '';\n    const errors = ((_c = (_b = requestState.responseData) === null || _b === void 0 ? void 0 : _b.body) === null || _c === void 0 ? void 0 : _c.errors)\n        || ((_e = (_d = requestState.responseData) === null || _d === void 0 ? void 0 : _d.body) === null || _e === void 0 ? void 0 : _e.description)\n        || ((_g = (_f = requestState.responseData) === null || _f === void 0 ? void 0 : _f.body) === null || _g === void 0 ? void 0 : _g.message);\n    if (!errors)\n        return requestErrorText;\n    if (typeof errors === 'string') {\n        return errors;\n    }\n    if (typeof errors === 'object') {\n        return Object.values(errors).map((e) => e.join(', ')).join('; ');\n    }\n    return requestErrorText;\n}\nconst changeRequestContainers = (requestState) => {\n    var _a;\n    const errorContainers = [];\n    const state = (0,_state__WEBPACK_IMPORTED_MODULE_1__.getCartState)();\n    let requestedId, requestedLine;\n    if (requestState.requestBody instanceof FormData || requestState.requestBody instanceof URLSearchParams) {\n        if (requestState.requestBody.has('line')) {\n            requestedLine = requestState.requestBody.get('line').toString();\n        }\n        if (requestState.requestBody.has('id')) {\n            requestedId = requestState.requestBody.get('id').toString();\n        }\n    }\n    else {\n        if ('line' in requestState.requestBody) {\n            requestedLine = String(requestState.requestBody.line);\n        }\n        if ('id' in requestState.requestBody) {\n            requestedId = String(requestState.requestBody.id);\n        }\n    }\n    if (requestedLine) {\n        const requestedLineNumber = Number(requestedLine);\n        if (requestedLineNumber > 0) {\n            const lineItemIndex = requestedLineNumber - 1;\n            requestedId = (_a = state.cart.items[lineItemIndex]) === null || _a === void 0 ? void 0 : _a.key;\n        }\n    }\n    if (requestedId) {\n        if (requestedId.indexOf(':') > -1) {\n            errorContainers.push(...Array.from(document.querySelectorAll(`[${DATA_ATTR_ERRORS}=\"${requestedId}\"]`)));\n        }\n        else {\n            errorContainers.push(...Array.from(document.querySelectorAll(state.cart.items.reduce((acc, element) => {\n                if (element.key === requestedId || element.id === Number(requestedId)) {\n                    acc.push(`[${DATA_ATTR_ERRORS}=\"${element.key}\"]`);\n                }\n                return acc;\n            }, []).join(','))));\n        }\n    }\n    return errorContainers;\n};\nconst addRequestContainers = (requestState) => {\n    var _a;\n    const initiator = (_a = requestState.info) === null || _a === void 0 ? void 0 : _a.initiator;\n    if (initiator instanceof _controls_product_form_element__WEBPACK_IMPORTED_MODULE_4__.HTMLProductFormElement) {\n        return Array.from(initiator.querySelectorAll(`[${DATA_ATTR_ERRORS}=\"form\"]`));\n    }\n    return [];\n};\nconst getContainers = (requestState) => {\n    switch (requestState.requestType) {\n        case _ajax_api__WEBPACK_IMPORTED_MODULE_0__.REQUEST_ADD:\n            return addRequestContainers(requestState);\n        case _ajax_api__WEBPACK_IMPORTED_MODULE_0__.REQUEST_CHANGE:\n            return changeRequestContainers(requestState);\n        default:\n            return [];\n    }\n};\nconst cartMessagesInit = () => {\n    document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_0__.EVENT_REQUEST_START_INTERNAL, (event) => {\n        const { requestState } = event.detail;\n        getContainers(requestState).forEach((element) => {\n            element.textContent = '';\n        });\n    });\n    document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_0__.EVENT_REQUEST_END_INTERNAL, (event) => {\n        const { requestState } = event.detail;\n        if (requestState.info.cancel)\n            return;\n        const containers = getContainers(requestState);\n        if (containers.length === 0)\n            return;\n        const errorMessage = getRequestError(requestState);\n        if (!errorMessage)\n            return;\n        containers.forEach((element) => {\n            element.textContent = errorMessage;\n        });\n    });\n};\n\n\n\n//# sourceURL=webpack://liquid-ajax-cart/./_src/messages.ts?\n}");

/***/ }),

/***/ "./_src/mutations.ts":
/*!***************************!*\
  !*** ./_src/mutations.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cartMutationsInit: () => (/* binding */ init),\n/* harmony export */   cartMutationsRun: () => (/* binding */ runAll)\n/* harmony export */ });\n/* harmony import */ var _ajax_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ajax-api */ \"./_src/ajax-api.ts\");\n/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./const */ \"./_src/const.ts\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./settings */ \"./_src/settings.ts\");\n\n\n\nlet pointer;\nlet needsRun = false;\nfunction runAll() {\n    const { mutations } = _settings__WEBPACK_IMPORTED_MODULE_2__.settings;\n    if (!Array.isArray(mutations)) {\n        console.error(`Liquid Ajax Cart: the \"mutations\" settings parameter must be an array`);\n    }\n    if (mutations.length === 0)\n        return;\n    needsRun = false;\n    pointer = -1;\n    runFunction();\n}\nfunction runFunction() {\n    const { mutations } = _settings__WEBPACK_IMPORTED_MODULE_2__.settings;\n    pointer++;\n    if (pointer >= mutations.length)\n        return;\n    let requestsList = [];\n    try {\n        const response = mutations[pointer]();\n        if (response) {\n            requestsList = (response === null || response === void 0 ? void 0 : response.requests) || [];\n        }\n    }\n    catch (e) {\n        console.error(`Liquid Ajax Cart: Error in the \"mutation\" function with index ${pointer}`);\n        console.error(e);\n    }\n    if (Array.isArray(requestsList)) {\n        runRequests(requestsList);\n        return;\n    }\n    runFunction();\n}\nfunction runRequests(requestsList) {\n    const request = requestsList.shift();\n    if (request) {\n        if (request.type && [_ajax_api__WEBPACK_IMPORTED_MODULE_0__.REQUEST_ADD, _ajax_api__WEBPACK_IMPORTED_MODULE_0__.REQUEST_CHANGE, _ajax_api__WEBPACK_IMPORTED_MODULE_0__.REQUEST_UPDATE, _ajax_api__WEBPACK_IMPORTED_MODULE_0__.REQUEST_CLEAR, _ajax_api__WEBPACK_IMPORTED_MODULE_0__.REQUEST_GET].includes(request.type)) {\n            (0,_ajax_api__WEBPACK_IMPORTED_MODULE_0__.addToQueues)({\n                requestType: request.type,\n                body: request.body,\n                options: {\n                    info: {\n                        initiator: \"mutation\"\n                    },\n                    important: true,\n                    lastCallback: (_) => {\n                        runRequests(requestsList);\n                    }\n                }\n            });\n            return;\n        }\n        console.error(`Liquid Ajax Cart: wrong request type in the mutation with index ${pointer}`);\n    }\n    if (requestsList.length > 0) {\n        runRequests(requestsList);\n        return;\n    }\n    runFunction();\n}\nfunction init() {\n    document.addEventListener(_const__WEBPACK_IMPORTED_MODULE_1__.EVENT_INIT, runAll);\n    document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_0__.EVENT_QUEUE_EMPTY_INTERNAL, () => {\n        if (!needsRun)\n            return;\n        runAll();\n    });\n    document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_0__.EVENT_REQUEST_START_INTERNAL, (event) => {\n        const { requestState } = event.detail;\n        if (requestState.info.initiator !== \"mutation\")\n            needsRun = true;\n    });\n}\n\n\n\n//# sourceURL=webpack://liquid-ajax-cart/./_src/mutations.ts?\n}");

/***/ }),

/***/ "./_src/sections.ts":
/*!**************************!*\
  !*** ./_src/sections.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cartSectionsInit: () => (/* binding */ cartSectionsInit)\n/* harmony export */ });\n/* harmony import */ var _ajax_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ajax-api */ \"./_src/ajax-api.ts\");\n/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./const */ \"./_src/const.ts\");\n\n\nconst DATA_ATTR_SECTION = `${_const__WEBPACK_IMPORTED_MODULE_1__.DATA_ATTR_PREFIX}-section`;\nconst DATA_ATTR_STATIC_ELEMENT = `${_const__WEBPACK_IMPORTED_MODULE_1__.DATA_ATTR_PREFIX}-static-element`;\nconst DATA_ATTR_SCROLL_AREA = `${_const__WEBPACK_IMPORTED_MODULE_1__.DATA_ATTR_PREFIX}-section-scroll`;\nconst SHOPIFY_SECTION_PREFIX = 'shopify-section-';\nfunction cartSectionsInit() {\n    document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_0__.EVENT_REQUEST_START_INTERNAL, (event) => {\n        const { requestState } = event.detail;\n        if (requestState.requestBody !== undefined) {\n            const sectionNames = [];\n            document.querySelectorAll(`[${DATA_ATTR_SECTION}]`).forEach(sectionNodeChild => {\n                const sectionNode = sectionNodeChild.closest(`[id^=\"${SHOPIFY_SECTION_PREFIX}\"]`);\n                if (sectionNode) {\n                    const sectionId = sectionNode.id.replace(SHOPIFY_SECTION_PREFIX, '');\n                    if (sectionNames.indexOf(sectionId) === -1) {\n                        sectionNames.push(sectionId);\n                    }\n                }\n                else {\n                    console.error(`Liquid Ajax Cart: there is a ${DATA_ATTR_SECTION} element that is not inside a Shopify section. All the ${DATA_ATTR_SECTION} elements must be inside Shopify sections.`);\n                }\n            });\n            if (sectionNames.length) {\n                let requestingSections = sectionNames.join(',');\n                let sectionsParam = undefined;\n                if (requestState.requestBody instanceof FormData || requestState.requestBody instanceof URLSearchParams) {\n                    if (requestState.requestBody.has('sections')) {\n                        sectionsParam = requestState.requestBody.get('sections').toString();\n                    }\n                }\n                else {\n                    sectionsParam = requestState.requestBody.sections;\n                }\n                if (((typeof sectionsParam === 'string' || sectionsParam instanceof String) &&\n                    sectionsParam !== '') ||\n                    (sectionsParam && Array.isArray(sectionsParam) && sectionsParam.length > 0)) {\n                    requestingSections = `${sectionsParam.toString()},${requestingSections}`;\n                }\n                if (requestState.requestBody instanceof FormData || requestState.requestBody instanceof URLSearchParams) {\n                    requestState.requestBody.set('sections', requestingSections);\n                }\n                else {\n                    requestState.requestBody.sections = requestingSections;\n                }\n            }\n        }\n    });\n    document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_0__.EVENT_REQUEST_END_INTERNAL, (event) => {\n        var _a, _b, _c, _d;\n        event.detail.sections = [];\n        const { requestState } = event.detail;\n        const parser = new DOMParser();\n        const updatedSections = []; // for sections event\n        if (requestState.responseData.body.sections || ((_b = (_a = requestState.extraResponseData) === null || _a === void 0 ? void 0 : _a.body) === null || _b === void 0 ? void 0 : _b.sections)) {\n            let sections = requestState.responseData.body.sections;\n            if ((_d = (_c = requestState.extraResponseData) === null || _c === void 0 ? void 0 : _c.body) === null || _d === void 0 ? void 0 : _d.sections) {\n                sections = Object.assign(Object.assign({}, sections), requestState.extraResponseData.body.sections);\n            }\n            for (let sectionId in sections) {\n                if (!sections[sectionId]) {\n                    console.error(`Liquid Ajax Cart: the HTML for the \"${sectionId}\" section was requested but the response is ${sections[sectionId]}`);\n                    continue;\n                }\n                document.querySelectorAll(`#shopify-section-${sectionId}`).forEach(sectionNode => {\n                    let newNodes = []; // for sections event\n                    const noId = \"__noId__\"; // for memorizing scroll positions and static elements\n                    // Memorize scroll positions\n                    const scrollAreasList = {};\n                    sectionNode.querySelectorAll(` [${DATA_ATTR_SCROLL_AREA}] `).forEach(scrollAreaNode => {\n                        let scrollId = scrollAreaNode.getAttribute(DATA_ATTR_SCROLL_AREA).toString().trim();\n                        if (scrollId === '') {\n                            scrollId = noId;\n                        }\n                        if (!(scrollId in scrollAreasList)) {\n                            scrollAreasList[scrollId] = [];\n                        }\n                        scrollAreasList[scrollId].push({\n                            scroll: scrollAreaNode.scrollTop,\n                            height: scrollAreaNode.scrollHeight\n                        });\n                    });\n                    // Memorize static elements\n                    const staticElementsList = {};\n                    const staticElements = sectionNode.querySelectorAll(`[${DATA_ATTR_STATIC_ELEMENT}]`);\n                    if (staticElements) {\n                        staticElements.forEach(staticElement => {\n                            let staticElementId = staticElement.getAttribute(DATA_ATTR_STATIC_ELEMENT).toString().trim();\n                            if (staticElementId === '') {\n                                staticElementId = noId;\n                            }\n                            if (!(staticElementId in staticElementsList)) {\n                                staticElementsList[staticElementId] = [];\n                            }\n                            staticElementsList[staticElementId].push(staticElement);\n                        });\n                    }\n                    // Replace HTML and Restore static elements\n                    const sectionParts = sectionNode.querySelectorAll(`[${DATA_ATTR_SECTION}]`);\n                    if (sectionParts) {\n                        const receivedDOM = parser.parseFromString(sections[sectionId], \"text/html\");\n                        // Remove all the loading=\"lazy\" image attributes to avoid flickering on Safari\n                        receivedDOM.querySelectorAll('img[loading=\"lazy\"]').forEach(image => {\n                            image.removeAttribute('loading');\n                        });\n                        // Restore static elements\n                        for (let staticElementId in staticElementsList) {\n                            receivedDOM.querySelectorAll(` [${DATA_ATTR_STATIC_ELEMENT}=\"${staticElementId.replace(noId, '')}\"] `).forEach((staticElement, staticElementIndex) => {\n                                if (staticElementIndex + 1 <= staticElementsList[staticElementId].length) {\n                                    staticElement.before(staticElementsList[staticElementId][staticElementIndex]);\n                                    staticElement.parentElement.removeChild(staticElement);\n                                }\n                            });\n                        }\n                        // Replace old sections with new sections\n                        const receivedParts = receivedDOM.querySelectorAll(`[${DATA_ATTR_SECTION}]`);\n                        if (sectionParts.length !== receivedParts.length) {\n                            console.error(`Liquid Ajax Cart: the received HTML for the \"${sectionId}\" section has a different quantity of the \"${DATA_ATTR_SECTION}\" containers. The section will be updated completely.`);\n                            const receivedSection = receivedDOM.querySelector(`#${SHOPIFY_SECTION_PREFIX}${sectionId}`);\n                            if (receivedSection) {\n                                sectionNode.innerHTML = \"\";\n                                while (receivedSection.childNodes.length) {\n                                    sectionNode.appendChild(receivedSection.firstChild);\n                                }\n                                newNodes.push(sectionNode);\n                            }\n                        }\n                        else {\n                            sectionParts.forEach((sectionPartsItem, sectionPartsItemIndex) => {\n                                sectionPartsItem.before(receivedParts[sectionPartsItemIndex]);\n                                sectionPartsItem.parentElement.removeChild(sectionPartsItem);\n                                newNodes.push(receivedParts[sectionPartsItemIndex]);\n                            });\n                        }\n                    }\n                    // Restore scroll positions\n                    for (let scrollId in scrollAreasList) {\n                        sectionNode.querySelectorAll(` [${DATA_ATTR_SCROLL_AREA}=\"${scrollId.replace(noId, '')}\"] `).forEach((scrollAreaNode, scrollAreaIndex) => {\n                            if (scrollAreaIndex + 1 <= scrollAreasList[scrollId].length) {\n                                if (requestState.requestType !== _ajax_api__WEBPACK_IMPORTED_MODULE_0__.REQUEST_ADD || scrollAreasList[scrollId][scrollAreaIndex]['height'] >= scrollAreaNode.scrollHeight) {\n                                    scrollAreaNode.scrollTop = scrollAreasList[scrollId][scrollAreaIndex]['scroll'];\n                                }\n                            }\n                        });\n                    }\n                    if (newNodes.length > 0) {\n                        updatedSections.push({\n                            id: sectionId,\n                            elements: newNodes\n                        });\n                    }\n                });\n            }\n        }\n        if (updatedSections.length > 0) {\n            event.detail.sections = updatedSections;\n        }\n    });\n}\n\n\n\n//# sourceURL=webpack://liquid-ajax-cart/./_src/sections.ts?\n}");

/***/ }),

/***/ "./_src/settings.ts":
/*!**************************!*\
  !*** ./_src/settings.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   configureCart: () => (/* binding */ configureCart),\n/* harmony export */   settings: () => (/* binding */ settings)\n/* harmony export */ });\n/* harmony import */ var _dom_binder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom-binder */ \"./_src/dom-binder.ts\");\n/* harmony import */ var _mutations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mutations */ \"./_src/mutations.ts\");\n\n\nconst settings = {\n    binderFormatters: {},\n    requestErrorText: 'There was an error while updating your cart. Please try again.',\n    updateOnWindowFocus: true,\n    quantityTagAllowZero: false,\n    quantityTagDebounce: 300,\n    mutations: [],\n    extraRequestOnError: true\n};\nfunction configureCart(property, value) {\n    if (property in settings) {\n        settings[property] = value;\n        if (window.liquidAjaxCart.init) {\n            if (property === 'binderFormatters') {\n                (0,_dom_binder__WEBPACK_IMPORTED_MODULE_0__.cartDomBinderRerender)();\n            }\n            if (property === 'mutations') {\n                (0,_mutations__WEBPACK_IMPORTED_MODULE_1__.cartMutationsRun)();\n            }\n        }\n    }\n    else {\n        console.error(`Liquid Ajax Cart: unknown configuration parameter \"${property}\"`);\n    }\n}\n\n\n\n//# sourceURL=webpack://liquid-ajax-cart/./_src/settings.ts?\n}");

/***/ }),

/***/ "./_src/state.ts":
/*!***********************!*\
  !*** ./_src/state.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cartStateInit: () => (/* binding */ cartStateInit),\n/* harmony export */   getCartState: () => (/* binding */ getCartState)\n/* harmony export */ });\n/* harmony import */ var _ajax_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ajax-api */ \"./_src/ajax-api.ts\");\n/* harmony import */ var _const__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./const */ \"./_src/const.ts\");\n\n\nconst DATA_ATTR_INITIAL_STATE = `${_const__WEBPACK_IMPORTED_MODULE_1__.DATA_ATTR_PREFIX}-initial-state`;\nlet cart = null;\nlet previousCart = undefined;\nfunction cartStateInit() {\n    document.addEventListener(_ajax_api__WEBPACK_IMPORTED_MODULE_0__.EVENT_REQUEST_END_INTERNAL, (event) => {\n        var _a, _b;\n        const { requestState } = event.detail;\n        let newCart;\n        if (((_a = requestState.extraResponseData) === null || _a === void 0 ? void 0 : _a.ok) && requestState.extraResponseData.body.token) {\n            newCart = requestState.extraResponseData.body;\n        }\n        else if (((_b = requestState.responseData) === null || _b === void 0 ? void 0 : _b.ok) && requestState.responseData.body.token) {\n            newCart = requestState.responseData.body;\n        }\n        if (newCart) {\n            previousCart = cart;\n            cart = newCart;\n            event.detail.previousCart = previousCart;\n            event.detail.cart = cart;\n        }\n    });\n    const initialStateContainer = document.querySelector(`[${DATA_ATTR_INITIAL_STATE}]`);\n    if (initialStateContainer) {\n        try {\n            cart = JSON.parse(initialStateContainer.textContent);\n        }\n        catch (e) {\n            console.error(`Liquid Ajax Cart: can't parse cart JSON from the \"${DATA_ATTR_INITIAL_STATE}\" script`);\n            console.error(e);\n        }\n    }\n    return new Promise((resolve, reject) => {\n        var _a, _b;\n        if (cart) {\n            resolve();\n            return;\n        }\n        fetch(`${((_b = (_a = window.Shopify) === null || _a === void 0 ? void 0 : _a.routes) === null || _b === void 0 ? void 0 : _b.root) || '/'}cart.js`, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(response => {\n            return response.json();\n        }).then(data => {\n            cart = data;\n            resolve();\n        }).catch(error => {\n            console.error(error);\n            reject('Can\\'t load the cart state from the \"/cart.js\" endpoint');\n        });\n    });\n}\nfunction getCartState() {\n    return {\n        cart,\n        previousCart\n    };\n}\n\n\n\n//# sourceURL=webpack://liquid-ajax-cart/./_src/state.ts?\n}");

/***/ })

/******/ });
/************************************************************************/
/******/ // The module cache
/******/ var __webpack_module_cache__ = {};
/******/ 
/******/ // The require function
/******/ function __webpack_require__(moduleId) {
/******/ 	// Check if module is in cache
/******/ 	var cachedModule = __webpack_module_cache__[moduleId];
/******/ 	if (cachedModule !== undefined) {
/******/ 		return cachedModule.exports;
/******/ 	}
/******/ 	// Create a new module (and put it into the cache)
/******/ 	var module = __webpack_module_cache__[moduleId] = {
/******/ 		// no module.id needed
/******/ 		// no module.loaded needed
/******/ 		exports: {}
/******/ 	};
/******/ 
/******/ 	// Execute the module function
/******/ 	__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 
/******/ 	// Return the exports of the module
/******/ 	return module.exports;
/******/ }
/******/ 
/************************************************************************/
/******/ /* webpack/runtime/define property getters */
/******/ (() => {
/******/ 	// define getter functions for harmony exports
/******/ 	__webpack_require__.d = (exports, definition) => {
/******/ 		for(var key in definition) {
/******/ 			if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 				Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 			}
/******/ 		}
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/hasOwnProperty shorthand */
/******/ (() => {
/******/ 	__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ })();
/******/ 
/******/ /* webpack/runtime/make namespace object */
/******/ (() => {
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = (exports) => {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/ })();
/******/ 
/************************************************************************/
/******/ 
/******/ // startup
/******/ // Load entry module and return exports
/******/ // This entry module can't be inlined because the eval devtool is used.
/******/ var __webpack_exports__ = __webpack_require__("./_src/index.ts");
/******/ 
